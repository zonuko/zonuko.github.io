<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>ぞぬこBLOG</title><link href="https://zonuko.github.io/" rel="alternate"></link><link href="https://zonuko.github.io/feeds/programming.atom.xml" rel="self"></link><id>https://zonuko.github.io/</id><updated>2017-01-15T17:52:00+09:00</updated><entry><title>Programming Phoenix勉強その7</title><link href="https://zonuko.github.io/posts/2017/01/15/programming-phoenix7/" rel="alternate"></link><published>2017-01-15T17:52:00+09:00</published><updated>2017-01-15T17:52:00+09:00</updated><author><name>zonuko</name></author><id>tag:zonuko.github.io,2017-01-15:posts/2017/01/15/programming-phoenix7/</id><summary type="html">&lt;div class="line-block"&gt;
&lt;div class="line"&gt;その7です。&lt;/div&gt;
&lt;div class="line"&gt;ここからchapter5です。認証周りをやるらしいです。&lt;/div&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;パスワードのハッシュ化&lt;/h2&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;まずはパスワードのハッシュ化を行います。必要なライブラリをインストールするために &lt;tt class="docutils literal"&gt;mix.exs&lt;/tt&gt; に以下のように追記を行います。&lt;/div&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="code-line"&gt; 1&lt;/span&gt;
&lt;span class="code-line"&gt; 2&lt;/span&gt;
&lt;span class="code-line"&gt; 3&lt;/span&gt;
&lt;span class="code-line"&gt; 4&lt;/span&gt;
&lt;span class="code-line"&gt; 5&lt;/span&gt;
&lt;span class="code-line"&gt; 6&lt;/span&gt;
&lt;span class="code-line"&gt; 7&lt;/span&gt;
&lt;span class="code-line"&gt; 8&lt;/span&gt;
&lt;span class="code-line"&gt; 9&lt;/span&gt;
&lt;span class="code-line"&gt;10&lt;/span&gt;
&lt;span class="code-line"&gt;11&lt;/span&gt;
&lt;span class="code-line"&gt;12&lt;/span&gt;
&lt;span class="code-line"&gt;13&lt;/span&gt;
&lt;span class="code-line"&gt;14&lt;/span&gt;
&lt;span class="code-line"&gt;15&lt;/span&gt;
&lt;span class="code-line"&gt;16&lt;/span&gt;
&lt;span class="code-line"&gt;17&lt;/span&gt;
&lt;span class="code-line"&gt;18&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;  &lt;span class="n"&gt;...&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="kd"&gt;def&lt;/span&gt; &lt;span class="n"&gt;application&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;mod&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nc"&gt;Rumbl&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[]},&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;   &lt;span class="ss"&gt;applications&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:phoenix&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:phoenix_pubsub&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:phoenix_html&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:cowboy&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:logger&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:gettext&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;                  &lt;span class="ss"&gt;:phoenix_ecto&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:postgrex&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:comeonin&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt; &lt;span class="c1"&gt;# comeoninを追加&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="k"&gt;end&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="n"&gt;...&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="kd"&gt;defp&lt;/span&gt; &lt;span class="n"&gt;deps&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="p"&gt;[{&lt;/span&gt;&lt;span class="ss"&gt;:phoenix&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;~&amp;gt; 1.2.1&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;   &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="ss"&gt;:phoenix_pubsub&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;~&amp;gt; 1.0&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;   &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="ss"&gt;:phoenix_ecto&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;~&amp;gt; 3.0&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;   &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="ss"&gt;:postgrex&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;gt;= 0.0.0&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;   &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="ss"&gt;:phoenix_html&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;~&amp;gt; 2.6&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;   &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="ss"&gt;:phoenix_live_reload&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;~&amp;gt; 1.0&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;only&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="ss"&gt;:dev&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;   &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="ss"&gt;:gettext&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;~&amp;gt; 0.11&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;   &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="ss"&gt;:cowboy&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;~&amp;gt; 1.0&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;   &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="ss"&gt;:comeonin&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;~&amp;gt; 2.0&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;}]&lt;/span&gt; &lt;span class="c1"&gt;# 追加&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="k"&gt;end&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;tt class="docutils literal"&gt;application&lt;/tt&gt; に対して追加しているのはこのアプリの依存ライブラリを書いているようです。&lt;/div&gt;
&lt;div class="line"&gt;&lt;tt class="docutils literal"&gt;comeonin&lt;/tt&gt; とか言うライブラリを追加しています。 &lt;a class="reference external" href="https://github.com/riverrun/comeonin"&gt;リポジトリ&lt;/a&gt; を見るとそのまんまパスワードをハッシュ化してくれるライブラリだとわかります。&lt;/div&gt;
&lt;div class="line"&gt;&lt;tt class="docutils literal"&gt;mix deps.get&lt;/tt&gt; で追加できたらモデルでこいつを使うように変更してやります。&lt;/div&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="code-line"&gt; 1&lt;/span&gt;
&lt;span class="code-line"&gt; 2&lt;/span&gt;
&lt;span class="code-line"&gt; 3&lt;/span&gt;
&lt;span class="code-line"&gt; 4&lt;/span&gt;
&lt;span class="code-line"&gt; 5&lt;/span&gt;
&lt;span class="code-line"&gt; 6&lt;/span&gt;
&lt;span class="code-line"&gt; 7&lt;/span&gt;
&lt;span class="code-line"&gt; 8&lt;/span&gt;
&lt;span class="code-line"&gt; 9&lt;/span&gt;
&lt;span class="code-line"&gt;10&lt;/span&gt;
&lt;span class="code-line"&gt;11&lt;/span&gt;
&lt;span class="code-line"&gt;12&lt;/span&gt;
&lt;span class="code-line"&gt;13&lt;/span&gt;
&lt;span class="code-line"&gt;14&lt;/span&gt;
&lt;span class="code-line"&gt;15&lt;/span&gt;
&lt;span class="code-line"&gt;16&lt;/span&gt;
&lt;span class="code-line"&gt;17&lt;/span&gt;
&lt;span class="code-line"&gt;18&lt;/span&gt;
&lt;span class="code-line"&gt;19&lt;/span&gt;
&lt;span class="code-line"&gt;20&lt;/span&gt;
&lt;span class="code-line"&gt;21&lt;/span&gt;
&lt;span class="code-line"&gt;22&lt;/span&gt;
&lt;span class="code-line"&gt;23&lt;/span&gt;
&lt;span class="code-line"&gt;24&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kd"&gt;def&lt;/span&gt; &lt;span class="n"&gt;changeset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;model&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;params&lt;/span&gt; &lt;span class="p"&gt;\\&lt;/span&gt; &lt;span class="p"&gt;%{})&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="n"&gt;model&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="o"&gt;|&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;cast&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;params&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:username&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="c1"&gt;# 更新予定のパラメータカラムを第三引数でとる(?)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="o"&gt;|&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;validate_required&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="ss"&gt;:name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:username&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="c1"&gt;# このリストがcastが返すchangesetに存在するか検証&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="o"&gt;|&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;validate_length&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:username&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;min&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;max&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="k"&gt;end&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="kd"&gt;def&lt;/span&gt; &lt;span class="n"&gt;registration_changeset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;model&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;params&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="n"&gt;model&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="o"&gt;|&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;changeset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;params&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="o"&gt;|&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;cast&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;params&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:password&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="o"&gt;|&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;validate_required&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="ss"&gt;:password&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="o"&gt;|&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;validate_length&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:password&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;min&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;max&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="o"&gt;|&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;put_pass_hash&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="k"&gt;end&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="kd"&gt;defp&lt;/span&gt; &lt;span class="n"&gt;put_pass_hash&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;changeset&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="n"&gt;changeset&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="p"&gt;%&lt;/span&gt;&lt;span class="nc"&gt;Ecto.Changeset&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="ss"&gt;valid?&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;changes&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;%{&lt;/span&gt;&lt;span class="ss"&gt;password&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;pass&lt;/span&gt;&lt;span class="p"&gt;}}&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;      &lt;span class="n"&gt;put_change&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;changeset&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:password_hash&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nc"&gt;Comeonin.Bcrypt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;hashpwsalt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pass&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="bp"&gt;_&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;      &lt;span class="n"&gt;changeset&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="k"&gt;end&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="k"&gt;end&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;tt class="docutils literal"&gt;Ecto&lt;/tt&gt; の最新版を使っているので書籍と若干異なっています。新しい方の &lt;tt class="docutils literal"&gt;Ecto&lt;/tt&gt; では &lt;tt class="docutils literal"&gt;cast/4&lt;/tt&gt; は推奨されなくなっているようです。&lt;/div&gt;
&lt;div class="line"&gt;なので、 &lt;a class="reference external" href="http://www.phoenixframework.org/docs/ecto-models"&gt;Phoenixのガイド&lt;/a&gt; とか、 &lt;a class="reference external" href="https://hexdocs.pm/ecto/Ecto.Changeset.html"&gt;Ectoのドキュメント&lt;/a&gt; とかを見て適当に修正してます。（このやり方でいいか不安ですが・・・）&lt;/div&gt;
&lt;div class="line"&gt;また、 &lt;tt class="docutils literal"&gt;:empty&lt;/tt&gt; もWarningになるので、空のハッシュに変えています。&lt;/div&gt;
&lt;div class="line"&gt;ついでに &lt;tt class="docutils literal"&gt;create&lt;/tt&gt; アクションで &lt;tt class="docutils literal"&gt;User.changeset&lt;/tt&gt; の部分を &lt;tt class="docutils literal"&gt;User.registration_changeset&lt;/tt&gt; に変更します。&lt;/div&gt;
&lt;div class="line"&gt;ここまでやってMacだとOKでしたが、Windowsだとエラーになりました。&lt;/div&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="windows-comeonin"&gt;
&lt;h2&gt;Windowsでのエラー（comeonin）&lt;/h2&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;Windowsから &lt;tt class="docutils literal"&gt;comeonin&lt;/tt&gt; を使おうとするとコンパイルを促すエラーが出るので &lt;a class="reference external" href="https://github.com/riverrun/comeonin/wiki/Requirements"&gt;ここ&lt;/a&gt; を参考にコンパイルします。&lt;/div&gt;
&lt;div class="line"&gt;ちなみにVisualStudioインストールしてあったので最下部付近にあるVSインストール済みの場合の方法を取っています。&lt;/div&gt;
&lt;/div&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;VSに付属している開発者コマンドプロンプトを起動します。&lt;/li&gt;
&lt;li&gt;開発者コマンドプロンプト上で以下のコマンドを実行しておきます。&lt;/li&gt;
&lt;/ol&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&amp;gt; vcvarsall.bat amd64&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;ol class="arabic simple"&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;vcvarsall.bat&lt;/tt&gt; にパスが通ってない場合は、適当にフルパスで指定すればいいと思います。これを行わなくてもコンパイル自体は出来ますが、実行時にエラーになりました。（ &lt;tt class="docutils literal"&gt;vcvarsall.bat&lt;/tt&gt; については &lt;a class="reference external" href="https://msdn.microsoft.com/ja-jp/library/x4d2c09s.aspx"&gt;MSDN&lt;/a&gt; ）&lt;/li&gt;
&lt;li&gt;本プロジェクト（ &lt;tt class="docutils literal"&gt;rumbl&lt;/tt&gt; ）のディレクトリまで移動して以下のコマンドを実行します。&lt;/li&gt;
&lt;/ol&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;rumbl &amp;gt; mix deps.compile&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;div class="line-block"&gt;
&lt;div class="line"&gt;自分の環境ではこれでうまくいきました。&lt;/div&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="plug"&gt;
&lt;h2&gt;Plugについて&lt;/h2&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;tt class="docutils literal"&gt;Plug&lt;/tt&gt; を使ってログイン機能を作る前に &lt;tt class="docutils literal"&gt;Plug&lt;/tt&gt; についてちょっと掘ります。&lt;/div&gt;
&lt;/div&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;Plug&lt;/tt&gt; にはモジュールプラグと関数プラグの二種類が存在する。&lt;/li&gt;
&lt;li&gt;モジュールプラグは名前の通り幾つかの関数を集めたモジュールのプラグ&lt;/li&gt;
&lt;li&gt;関数プラグは関数名をアトムとして指定したプラグ&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;ログイン機能としてモジュールプラグを作成します。&lt;/div&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id4"&gt;
&lt;h3&gt;モジュールプラグ&lt;/h3&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;モジュールプラグとして設定するモジュールには &lt;tt class="docutils literal"&gt;init/1&lt;/tt&gt; 関数と &lt;tt class="docutils literal"&gt;call/2&lt;/tt&gt; 関数が必要とされます。&lt;/div&gt;
&lt;div class="line"&gt;以下は何もしないモジュールプラグの例です。&lt;/div&gt;
&lt;/div&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;1&lt;/span&gt;
&lt;span class="code-line"&gt;2&lt;/span&gt;
&lt;span class="code-line"&gt;3&lt;/span&gt;
&lt;span class="code-line"&gt;4&lt;/span&gt;
&lt;span class="code-line"&gt;5&lt;/span&gt;
&lt;span class="code-line"&gt;6&lt;/span&gt;
&lt;span class="code-line"&gt;7&lt;/span&gt;
&lt;span class="code-line"&gt;8&lt;/span&gt;
&lt;span class="code-line"&gt;9&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kd"&gt;defmodule&lt;/span&gt; &lt;span class="nc"&gt;NothingPlug&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="kd"&gt;def&lt;/span&gt; &lt;span class="n"&gt;init&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;opts&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="n"&gt;opts&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="k"&gt;end&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="kd"&gt;def&lt;/span&gt; &lt;span class="n"&gt;call&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;conn&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;_opts&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="n"&gt;conn&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="k"&gt;end&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="k"&gt;end&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;tt class="docutils literal"&gt;call&lt;/tt&gt; 関数の引数を見るとわかりますが、モジュールプラグは &lt;tt class="docutils literal"&gt;conn&lt;/tt&gt; を変換するようです。&lt;/div&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="plug-conn-conn"&gt;
&lt;h3&gt;Plug.Connについて(conn)&lt;/h3&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;tt class="docutils literal"&gt;Plug.Conn&lt;/tt&gt; が持つフィールドについて見てみます。&lt;/div&gt;
&lt;div class="line"&gt;書籍の方には色々書いてありますが割愛します。 &lt;a class="reference external" href="https://hexdocs.pm/plug/Plug.Conn.html"&gt;Plug.Connの公式ドキュメント&lt;/a&gt; を参照して下さい。ここではリクエストフィールドが持つものだけを見てみます。&lt;/div&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;&lt;tt class="docutils literal"&gt;host&lt;/tt&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;p class="first last"&gt;リクエストのホスト名 ex) www.pragprog.com&lt;/p&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;&lt;tt class="docutils literal"&gt;method&lt;/tt&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;p class="first last"&gt;リクエストのWebメソッド（GETとかPOSTとか）&lt;/p&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;&lt;tt class="docutils literal"&gt;path_info&lt;/tt&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;p class="first last"&gt;パスを分割したリスト&lt;/p&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;&lt;tt class="docutils literal"&gt;req_headers&lt;/tt&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;p class="first last"&gt;リクエストヘッダ&lt;/p&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;&lt;tt class="docutils literal"&gt;scheme&lt;/tt&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;p class="first last"&gt;プロトコル（httpとか）&lt;/p&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;Webのリクエスト周りに関係するものが存在していることがわかります。&lt;/div&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id5"&gt;
&lt;h3&gt;認証プラグの実装&lt;/h3&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;やっと認証用のプラグを実装します。&lt;/div&gt;
&lt;div class="line"&gt;&lt;tt class="docutils literal"&gt;controllers/auth.ex&lt;/tt&gt; を以下の内容で実装します。&lt;/div&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="code-line"&gt; 1&lt;/span&gt;
&lt;span class="code-line"&gt; 2&lt;/span&gt;
&lt;span class="code-line"&gt; 3&lt;/span&gt;
&lt;span class="code-line"&gt; 4&lt;/span&gt;
&lt;span class="code-line"&gt; 5&lt;/span&gt;
&lt;span class="code-line"&gt; 6&lt;/span&gt;
&lt;span class="code-line"&gt; 7&lt;/span&gt;
&lt;span class="code-line"&gt; 8&lt;/span&gt;
&lt;span class="code-line"&gt; 9&lt;/span&gt;
&lt;span class="code-line"&gt;10&lt;/span&gt;
&lt;span class="code-line"&gt;11&lt;/span&gt;
&lt;span class="code-line"&gt;12&lt;/span&gt;
&lt;span class="code-line"&gt;13&lt;/span&gt;
&lt;span class="code-line"&gt;14&lt;/span&gt;
&lt;span class="code-line"&gt;15&lt;/span&gt;
&lt;span class="code-line"&gt;16&lt;/span&gt;
&lt;span class="code-line"&gt;17&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kd"&gt;defmodule&lt;/span&gt; &lt;span class="nc"&gt;Rumbl.Auth&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nc"&gt;Plug.Conn&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="kd"&gt;def&lt;/span&gt; &lt;span class="n"&gt;init&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;opts&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="c1"&gt;# キーワードリストから:repoの箇所の値を取得する&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="c1"&gt;# 無ければexception(つまりは必須)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="nc"&gt;Keyword&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fetch!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;opts&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:repo&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="k"&gt;end&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="kd"&gt;def&lt;/span&gt; &lt;span class="n"&gt;call&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;conn&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;repo&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="n"&gt;user_id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;get_session&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;conn&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:user_id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="n"&gt;user&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;user_id&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;repo&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;Rumbl.User&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;user_id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="c1"&gt;# assignでconnを変更する(importされた関数)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="c1"&gt;# これによって:current_userがコントローラやビューで使えるようになる&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="n"&gt;assign&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;conn&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:current_user&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="k"&gt;end&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="k"&gt;end&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;div class="line-block"&gt;
&lt;div class="line"&gt;コメント通りなので余り言うことはないです。&lt;/div&gt;
&lt;div class="line"&gt;&lt;tt class="docutils literal"&gt;init&lt;/tt&gt; で &lt;tt class="docutils literal"&gt;repo&lt;/tt&gt; を取得してそれが &lt;tt class="docutils literal"&gt;conn&lt;/tt&gt; の第二引数に渡されるようです。セッションにあるユーザIDからユーザを取得しています。&lt;/div&gt;
&lt;div class="line"&gt;パイプラインの流れの一部として処理してほしいので &lt;tt class="docutils literal"&gt;router.ex&lt;/tt&gt; を以下のように変更します。&lt;/div&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;1&lt;/span&gt;
&lt;span class="code-line"&gt;2&lt;/span&gt;
&lt;span class="code-line"&gt;3&lt;/span&gt;
&lt;span class="code-line"&gt;4&lt;/span&gt;
&lt;span class="code-line"&gt;5&lt;/span&gt;
&lt;span class="code-line"&gt;6&lt;/span&gt;
&lt;span class="code-line"&gt;7&lt;/span&gt;
&lt;span class="code-line"&gt;8&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;pipeline&lt;/span&gt; &lt;span class="ss"&gt;:browser&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="n"&gt;plug&lt;/span&gt; &lt;span class="ss"&gt;:accepts&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;html&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="n"&gt;plug&lt;/span&gt; &lt;span class="ss"&gt;:fetch_session&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="n"&gt;plug&lt;/span&gt; &lt;span class="ss"&gt;:fetch_flash&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="n"&gt;plug&lt;/span&gt; &lt;span class="ss"&gt;:protect_from_forgery&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="n"&gt;plug&lt;/span&gt; &lt;span class="ss"&gt;:put_secure_browser_headers&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="n"&gt;plug&lt;/span&gt; &lt;span class="nc"&gt;Rumbl.Auth&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;repo&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nc"&gt;Rumbl.Repo&lt;/span&gt; &lt;span class="c1"&gt;# 追加&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="k"&gt;end&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;
&lt;div class="section" id="id6"&gt;
&lt;h3&gt;アクセス制限の実装&lt;/h3&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;tt class="docutils literal"&gt;Plug&lt;/tt&gt; は出来たのでアクセス制限とログインを作ります。ログインしない限りは &lt;tt class="docutils literal"&gt;:index&lt;/tt&gt; アクションと &lt;tt class="docutils literal"&gt;:show&lt;/tt&gt; アクションにアクセス出来ないようにします。&lt;/div&gt;
&lt;div class="line"&gt;&lt;tt class="docutils literal"&gt;user_controller.ex&lt;/tt&gt; を以下のように変更します。&lt;/div&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="code-line"&gt; 1&lt;/span&gt;
&lt;span class="code-line"&gt; 2&lt;/span&gt;
&lt;span class="code-line"&gt; 3&lt;/span&gt;
&lt;span class="code-line"&gt; 4&lt;/span&gt;
&lt;span class="code-line"&gt; 5&lt;/span&gt;
&lt;span class="code-line"&gt; 6&lt;/span&gt;
&lt;span class="code-line"&gt; 7&lt;/span&gt;
&lt;span class="code-line"&gt; 8&lt;/span&gt;
&lt;span class="code-line"&gt; 9&lt;/span&gt;
&lt;span class="code-line"&gt;10&lt;/span&gt;
&lt;span class="code-line"&gt;11&lt;/span&gt;
&lt;span class="code-line"&gt;12&lt;/span&gt;
&lt;span class="code-line"&gt;13&lt;/span&gt;
&lt;span class="code-line"&gt;14&lt;/span&gt;
&lt;span class="code-line"&gt;15&lt;/span&gt;
&lt;span class="code-line"&gt;16&lt;/span&gt;
&lt;span class="code-line"&gt;17&lt;/span&gt;
&lt;span class="code-line"&gt;18&lt;/span&gt;
&lt;span class="code-line"&gt;19&lt;/span&gt;
&lt;span class="code-line"&gt;20&lt;/span&gt;
&lt;span class="code-line"&gt;21&lt;/span&gt;
&lt;span class="code-line"&gt;22&lt;/span&gt;
&lt;span class="code-line"&gt;23&lt;/span&gt;
&lt;span class="code-line"&gt;24&lt;/span&gt;
&lt;span class="code-line"&gt;25&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kd"&gt;defmodule&lt;/span&gt; &lt;span class="nc"&gt;Rumbl.UserController&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="n"&gt;...&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="kd"&gt;def&lt;/span&gt; &lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;conn&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;_params&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="n"&gt;authenticate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;conn&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;      &lt;span class="c1"&gt;# 構造体connのhaltedメンバのパターンマッチによる振り分け&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;      &lt;span class="p"&gt;%&lt;/span&gt;&lt;span class="nc"&gt;Plug.Conn&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="ss"&gt;halted&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;true&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;conn&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="n"&gt;conn&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;      &lt;span class="n"&gt;conn&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="n"&gt;users&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;Repo&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;all&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;Rumbl.User&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="n"&gt;render&lt;/span&gt; &lt;span class="n"&gt;conn&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;index.html&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;users&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;users&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="k"&gt;end&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="k"&gt;end&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="n"&gt;...&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="kd"&gt;defp&lt;/span&gt; &lt;span class="n"&gt;authenticate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;conn&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="c1"&gt;# Plugで追加したassignの呼び出しが可能かどうか&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;conn&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;assigns&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;current_user&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;      &lt;span class="n"&gt;conn&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="k"&gt;else&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;      &lt;span class="n"&gt;conn&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;      &lt;span class="o"&gt;|&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;put_flash&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:error&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;You must be logged in to access that page&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;      &lt;span class="o"&gt;|&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;redirect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;to&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;page_path&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;conn&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:index&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;      &lt;span class="o"&gt;|&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;halt&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="k"&gt;end&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="k"&gt;end&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="k"&gt;end&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;div class="line-block"&gt;
&lt;div class="line"&gt;先程の &lt;tt class="docutils literal"&gt;Plug&lt;/tt&gt; で変更した値を &lt;tt class="docutils literal"&gt;authenticate/1&lt;/tt&gt; 関数で使っています。また、 &lt;tt class="docutils literal"&gt;:index&lt;/tt&gt; アクションのアクセス時に &lt;tt class="docutils literal"&gt;authenticate&lt;/tt&gt; 関数で認証済みかチェック掛けています。&lt;/div&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="authenticate"&gt;
&lt;h3&gt;&lt;tt class="docutils literal"&gt;authenticate&lt;/tt&gt; の関数プラグ化&lt;/h3&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;tt class="docutils literal"&gt;user_controller.ex&lt;/tt&gt; の &lt;tt class="docutils literal"&gt;Rumbl.Web&lt;/tt&gt; の直下のあたりに以下を追加します。&lt;/div&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;plug&lt;/span&gt; &lt;span class="ss"&gt;:authenticate&lt;/span&gt; &lt;span class="ow"&gt;when&lt;/span&gt; &lt;span class="n"&gt;action&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:index&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:show&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;div class="line-block"&gt;
&lt;div class="line"&gt;また、 &lt;tt class="docutils literal"&gt;index&lt;/tt&gt; アクションを &lt;tt class="docutils literal"&gt;case&lt;/tt&gt; 文を使う以前のものに戻しておきます。 &lt;tt class="docutils literal"&gt;authenticate&lt;/tt&gt; 関数も以下のように2引数にしておきます。&lt;/div&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="code-line"&gt; 1&lt;/span&gt;
&lt;span class="code-line"&gt; 2&lt;/span&gt;
&lt;span class="code-line"&gt; 3&lt;/span&gt;
&lt;span class="code-line"&gt; 4&lt;/span&gt;
&lt;span class="code-line"&gt; 5&lt;/span&gt;
&lt;span class="code-line"&gt; 6&lt;/span&gt;
&lt;span class="code-line"&gt; 7&lt;/span&gt;
&lt;span class="code-line"&gt; 8&lt;/span&gt;
&lt;span class="code-line"&gt; 9&lt;/span&gt;
&lt;span class="code-line"&gt;10&lt;/span&gt;
&lt;span class="code-line"&gt;11&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kd"&gt;defp&lt;/span&gt; &lt;span class="n"&gt;authenticate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;conn&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;_opts&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="c1"&gt;# Plugで追加したassignの呼び出しが可能かどうか&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;conn&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;assigns&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;current_user&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="n"&gt;conn&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="k"&gt;else&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="n"&gt;conn&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="o"&gt;|&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;put_flash&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:error&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;You must be logged in to access that page&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="o"&gt;|&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;redirect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;to&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;page_path&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;conn&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:index&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="o"&gt;|&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;halt&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="k"&gt;end&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="k"&gt;end&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;tt class="docutils literal"&gt;_opts&lt;/tt&gt; を追加しただけです。関数 &lt;tt class="docutils literal"&gt;Plug&lt;/tt&gt; 化したためです。 &lt;tt class="docutils literal"&gt;Plug&lt;/tt&gt; をマクロ展開したときの例が出てますが割愛します。&lt;/div&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id7"&gt;
&lt;h3&gt;ログインの実装&lt;/h3&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;認証までしか無いので実際のログイン処理を実装します。取り敢えず &lt;tt class="docutils literal"&gt;create&lt;/tt&gt; アクションでユーザが作成された時に自動でログインするようにしてみます。&lt;/div&gt;
&lt;div class="line"&gt;先程作った &lt;tt class="docutils literal"&gt;auth.ex&lt;/tt&gt; に以下の関数を追加します。&lt;/div&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;1&lt;/span&gt;
&lt;span class="code-line"&gt;2&lt;/span&gt;
&lt;span class="code-line"&gt;3&lt;/span&gt;
&lt;span class="code-line"&gt;4&lt;/span&gt;
&lt;span class="code-line"&gt;5&lt;/span&gt;
&lt;span class="code-line"&gt;6&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kd"&gt;def&lt;/span&gt; &lt;span class="n"&gt;login&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;conn&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="n"&gt;conn&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="o"&gt;|&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;assign&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:current_user&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="o"&gt;|&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;put_session&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:user_id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="o"&gt;|&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;configure_session&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;renew&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;true&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# セッションキーとかを新しくしている(セキュリティのため)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="k"&gt;end&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;div class="line-block"&gt;
&lt;div class="line"&gt;次に &lt;tt class="docutils literal"&gt;create&lt;/tt&gt; アクションでこの関数を呼び出すようにしてやります。&lt;/div&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="code-line"&gt; 1&lt;/span&gt;
&lt;span class="code-line"&gt; 2&lt;/span&gt;
&lt;span class="code-line"&gt; 3&lt;/span&gt;
&lt;span class="code-line"&gt; 4&lt;/span&gt;
&lt;span class="code-line"&gt; 5&lt;/span&gt;
&lt;span class="code-line"&gt; 6&lt;/span&gt;
&lt;span class="code-line"&gt; 7&lt;/span&gt;
&lt;span class="code-line"&gt; 8&lt;/span&gt;
&lt;span class="code-line"&gt; 9&lt;/span&gt;
&lt;span class="code-line"&gt;10&lt;/span&gt;
&lt;span class="code-line"&gt;11&lt;/span&gt;
&lt;span class="code-line"&gt;12&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kd"&gt;def&lt;/span&gt; &lt;span class="n"&gt;create&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;conn&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;%{&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;user&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;user_params&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="n"&gt;changeset&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;User&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;registration_changeset&lt;/span&gt;&lt;span class="p"&gt;(%&lt;/span&gt;&lt;span class="nc"&gt;User&lt;/span&gt;&lt;span class="p"&gt;{},&lt;/span&gt; &lt;span class="n"&gt;user_params&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="nc"&gt;Repo&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;insert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;changeset&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="ss"&gt;:ok&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;      &lt;span class="n"&gt;conn&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;      &lt;span class="o"&gt;|&amp;gt;&lt;/span&gt; &lt;span class="nc"&gt;Rumbl.Auth&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;login&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# ユーザを作成したらログイン&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;      &lt;span class="o"&gt;|&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;put_flash&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:info&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; created!&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;      &lt;span class="o"&gt;|&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;redirect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;to&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;user_path&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;conn&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:index&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="ss"&gt;:error&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;changeset&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;      &lt;span class="n"&gt;render&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;conn&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;new.html&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;changeset&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;changeset&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="k"&gt;end&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="k"&gt;end&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;div class="line-block"&gt;
&lt;div class="line"&gt;これで完了です。&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id8"&gt;
&lt;h3&gt;ログイン画面の実装&lt;/h3&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;ここまででログインするための素材は揃ったので、ログイン/ログアウト画面を作ります。今まで作ったものの合わせ技なので一気に行きます。&lt;/div&gt;
&lt;div class="line"&gt;&lt;tt class="docutils literal"&gt;session_controller.ex&lt;/tt&gt; を実装します。&lt;/div&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="code-line"&gt; 1&lt;/span&gt;
&lt;span class="code-line"&gt; 2&lt;/span&gt;
&lt;span class="code-line"&gt; 3&lt;/span&gt;
&lt;span class="code-line"&gt; 4&lt;/span&gt;
&lt;span class="code-line"&gt; 5&lt;/span&gt;
&lt;span class="code-line"&gt; 6&lt;/span&gt;
&lt;span class="code-line"&gt; 7&lt;/span&gt;
&lt;span class="code-line"&gt; 8&lt;/span&gt;
&lt;span class="code-line"&gt; 9&lt;/span&gt;
&lt;span class="code-line"&gt;10&lt;/span&gt;
&lt;span class="code-line"&gt;11&lt;/span&gt;
&lt;span class="code-line"&gt;12&lt;/span&gt;
&lt;span class="code-line"&gt;13&lt;/span&gt;
&lt;span class="code-line"&gt;14&lt;/span&gt;
&lt;span class="code-line"&gt;15&lt;/span&gt;
&lt;span class="code-line"&gt;16&lt;/span&gt;
&lt;span class="code-line"&gt;17&lt;/span&gt;
&lt;span class="code-line"&gt;18&lt;/span&gt;
&lt;span class="code-line"&gt;19&lt;/span&gt;
&lt;span class="code-line"&gt;20&lt;/span&gt;
&lt;span class="code-line"&gt;21&lt;/span&gt;
&lt;span class="code-line"&gt;22&lt;/span&gt;
&lt;span class="code-line"&gt;23&lt;/span&gt;
&lt;span class="code-line"&gt;24&lt;/span&gt;
&lt;span class="code-line"&gt;25&lt;/span&gt;
&lt;span class="code-line"&gt;26&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kd"&gt;defmodule&lt;/span&gt; &lt;span class="nc"&gt;Rumbl.SessionController&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="nc"&gt;Rumbl.Web&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:controller&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="kd"&gt;def&lt;/span&gt; &lt;span class="n"&gt;new&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;conn&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;_&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="n"&gt;render&lt;/span&gt; &lt;span class="n"&gt;conn&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;new.html&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="k"&gt;end&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="kd"&gt;def&lt;/span&gt; &lt;span class="n"&gt;create&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;conn&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;%{&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;session&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;%{&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;username&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;password&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;pass&lt;/span&gt;&lt;span class="p"&gt;}})&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="nc"&gt;Rumbl.Auth&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;login_by_username_add_pass&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;conn&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;pass&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;repo&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nc"&gt;Repo&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;      &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="ss"&gt;:ok&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;conn&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="n"&gt;conn&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="o"&gt;|&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;put_flash&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:info&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Welcome back!&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="o"&gt;|&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;redirect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;to&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;page_path&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;conn&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:index&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;      &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="ss"&gt;:error&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;_reason&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;conn&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="n"&gt;conn&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="o"&gt;|&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;put_flash&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:error&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Invalid username/password combination&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="o"&gt;|&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;render&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;new.html&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="k"&gt;end&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="k"&gt;end&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="kd"&gt;def&lt;/span&gt; &lt;span class="n"&gt;delete&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;conn&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;_&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="n"&gt;conn&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="o"&gt;|&amp;gt;&lt;/span&gt; &lt;span class="nc"&gt;Rumbl.Auth&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;logout&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="o"&gt;|&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;redirect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;to&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;page_path&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;conn&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:index&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="k"&gt;end&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="k"&gt;end&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;tt class="docutils literal"&gt;session_view.ex&lt;/tt&gt; も作っておきます。内容は割愛します。関数などは定義しなくて良いです。&lt;/div&gt;
&lt;div class="line"&gt;&lt;tt class="docutils literal"&gt;router.ex&lt;/tt&gt; も上で作った &lt;tt class="docutils literal"&gt;session_controller.ex&lt;/tt&gt; 用に追加しておきます。&lt;/div&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;1&lt;/span&gt;
&lt;span class="code-line"&gt;2&lt;/span&gt;
&lt;span class="code-line"&gt;3&lt;/span&gt;
&lt;span class="code-line"&gt;4&lt;/span&gt;
&lt;span class="code-line"&gt;5&lt;/span&gt;
&lt;span class="code-line"&gt;6&lt;/span&gt;
&lt;span class="code-line"&gt;7&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;scope&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;/&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nc"&gt;Rumbl&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="n"&gt;pipe_through&lt;/span&gt; &lt;span class="ss"&gt;:browser&lt;/span&gt; &lt;span class="c1"&gt;# Use the default browser stacks.&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="n"&gt;get&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;/&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nc"&gt;PageController&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:index&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="n"&gt;resources&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;/users&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nc"&gt;UserController&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;only&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:index&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:show&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:new&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:create&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="n"&gt;resources&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;/sessions&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nc"&gt;SessionController&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;only&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:new&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:create&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:delete&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="c1"&gt;# 追加&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="k"&gt;end&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;div class="line-block"&gt;
&lt;div class="line"&gt;usernameとpasswordでログインするための関数とログアウト用の関数を &lt;tt class="docutils literal"&gt;auth.ex&lt;/tt&gt; に用意しておきます。&lt;/div&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="code-line"&gt; 1&lt;/span&gt;
&lt;span class="code-line"&gt; 2&lt;/span&gt;
&lt;span class="code-line"&gt; 3&lt;/span&gt;
&lt;span class="code-line"&gt; 4&lt;/span&gt;
&lt;span class="code-line"&gt; 5&lt;/span&gt;
&lt;span class="code-line"&gt; 6&lt;/span&gt;
&lt;span class="code-line"&gt; 7&lt;/span&gt;
&lt;span class="code-line"&gt; 8&lt;/span&gt;
&lt;span class="code-line"&gt; 9&lt;/span&gt;
&lt;span class="code-line"&gt;10&lt;/span&gt;
&lt;span class="code-line"&gt;11&lt;/span&gt;
&lt;span class="code-line"&gt;12&lt;/span&gt;
&lt;span class="code-line"&gt;13&lt;/span&gt;
&lt;span class="code-line"&gt;14&lt;/span&gt;
&lt;span class="code-line"&gt;15&lt;/span&gt;
&lt;span class="code-line"&gt;16&lt;/span&gt;
&lt;span class="code-line"&gt;17&lt;/span&gt;
&lt;span class="code-line"&gt;18&lt;/span&gt;
&lt;span class="code-line"&gt;19&lt;/span&gt;
&lt;span class="code-line"&gt;20&lt;/span&gt;
&lt;span class="code-line"&gt;21&lt;/span&gt;
&lt;span class="code-line"&gt;22&lt;/span&gt;
&lt;span class="code-line"&gt;23&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;...&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nc"&gt;Comeonin.Bcrypt&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;only&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;checkpw&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;dummy_checkpw&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="n"&gt;...&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="kd"&gt;def&lt;/span&gt; &lt;span class="n"&gt;logout&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;conn&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="n"&gt;configure_session&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;conn&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;drop&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;true&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="k"&gt;end&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="kd"&gt;def&lt;/span&gt; &lt;span class="n"&gt;login_by_username_add_pass&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;conn&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;username&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;given_pass&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;opts&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="n"&gt;repo&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;Keyword&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fetch!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;opts&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:repo&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="n"&gt;user&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;repo&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_by&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;Rumbl.User&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;username&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;username&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="c1"&gt;# 複数の値で分岐しているためcaseではなくcond(caseは与えられた1つの値に対する分岐)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="k"&gt;cond&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="n"&gt;user&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;checkpw&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;given_pass&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;password_hash&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;      &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="ss"&gt;:ok&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;login&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;conn&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="n"&gt;user&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;      &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="ss"&gt;:error&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:unauthorized&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;conn&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="no"&gt;true&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;      &lt;span class="n"&gt;dummy_checkpw&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;      &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="ss"&gt;:error&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:not_found&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;conn&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="k"&gt;end&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="k"&gt;end&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;div class="line-block"&gt;
&lt;div class="line"&gt;ログイン画面用のテンプレートも作ります。まず &lt;tt class="docutils literal"&gt;session/new.html.eex&lt;/tt&gt; を以下のように実装します。&lt;/div&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="code-line"&gt; 1&lt;/span&gt;
&lt;span class="code-line"&gt; 2&lt;/span&gt;
&lt;span class="code-line"&gt; 3&lt;/span&gt;
&lt;span class="code-line"&gt; 4&lt;/span&gt;
&lt;span class="code-line"&gt; 5&lt;/span&gt;
&lt;span class="code-line"&gt; 6&lt;/span&gt;
&lt;span class="code-line"&gt; 7&lt;/span&gt;
&lt;span class="code-line"&gt; 8&lt;/span&gt;
&lt;span class="code-line"&gt; 9&lt;/span&gt;
&lt;span class="code-line"&gt;10&lt;/span&gt;
&lt;span class="code-line"&gt;11&lt;/span&gt;
&lt;span class="code-line"&gt;12&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="x"&gt;&amp;lt;h1&amp;gt;Login&amp;lt;/h1&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="cp"&gt;&amp;lt;%=&lt;/span&gt; &lt;span class="n"&gt;form_for&lt;/span&gt; &lt;span class="vi"&gt;@conn&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;session_path&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="vi"&gt;@conn&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:create&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;as&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="ss"&gt;:session&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;fn&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="cp"&gt;%&amp;gt;&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="x"&gt;  &amp;lt;div class=&amp;quot;form-group&amp;quot;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="x"&gt;    &lt;/span&gt;&lt;span class="cp"&gt;&amp;lt;%=&lt;/span&gt; &lt;span class="n"&gt;text_input&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:username&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;placeholder&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Username&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;class&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;form-control&amp;quot;&lt;/span&gt; &lt;span class="cp"&gt;%&amp;gt;&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="x"&gt;  &amp;lt;/div&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="x"&gt;  &amp;lt;div class=&amp;quot;form-group&amp;quot;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="x"&gt;    &lt;/span&gt;&lt;span class="cp"&gt;&amp;lt;%=&lt;/span&gt; &lt;span class="n"&gt;password_input&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:password&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;placeholder&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Password&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;class&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;form-control&amp;quot;&lt;/span&gt; &lt;span class="cp"&gt;%&amp;gt;&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="x"&gt;  &amp;lt;/div&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="x"&gt;  &lt;/span&gt;&lt;span class="cp"&gt;&amp;lt;%=&lt;/span&gt; &lt;span class="n"&gt;submit&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Log in&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;class&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;btn btn-primary&amp;quot;&lt;/span&gt; &lt;span class="cp"&gt;%&amp;gt;&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="cp"&gt;&amp;lt;%&lt;/span&gt; &lt;span class="k"&gt;end&lt;/span&gt; &lt;span class="cp"&gt;%&amp;gt;&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;div class="line-block"&gt;
&lt;div class="line"&gt;最後に今まで作ったもののリンクを表示します。 &lt;tt class="docutils literal"&gt;layout/app.html.eex&lt;/tt&gt; を以下のように変更します。&lt;/div&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="code-line"&gt; 1&lt;/span&gt;
&lt;span class="code-line"&gt; 2&lt;/span&gt;
&lt;span class="code-line"&gt; 3&lt;/span&gt;
&lt;span class="code-line"&gt; 4&lt;/span&gt;
&lt;span class="code-line"&gt; 5&lt;/span&gt;
&lt;span class="code-line"&gt; 6&lt;/span&gt;
&lt;span class="code-line"&gt; 7&lt;/span&gt;
&lt;span class="code-line"&gt; 8&lt;/span&gt;
&lt;span class="code-line"&gt; 9&lt;/span&gt;
&lt;span class="code-line"&gt;10&lt;/span&gt;
&lt;span class="code-line"&gt;11&lt;/span&gt;
&lt;span class="code-line"&gt;12&lt;/span&gt;
&lt;span class="code-line"&gt;13&lt;/span&gt;
&lt;span class="code-line"&gt;14&lt;/span&gt;
&lt;span class="code-line"&gt;15&lt;/span&gt;
&lt;span class="code-line"&gt;16&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="x"&gt;&amp;lt;header class=&amp;quot;header&amp;quot;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="x"&gt;  &amp;lt;ol class=&amp;quot;breadcrumb text-right&amp;quot;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="x"&gt;    &amp;lt;!-- assignsで突っ込んだものが使えている --&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="x"&gt;    &lt;/span&gt;&lt;span class="cp"&gt;&amp;lt;%=&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="vi"&gt;@current_user&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="cp"&gt;%&amp;gt;&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="x"&gt;      &amp;lt;li&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&amp;lt;%=&lt;/span&gt; &lt;span class="vi"&gt;@current_user&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;username&lt;/span&gt; &lt;span class="cp"&gt;%&amp;gt;&lt;/span&gt;&lt;span class="x"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="x"&gt;      &amp;lt;li&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="x"&gt;        &lt;/span&gt;&lt;span class="cp"&gt;&amp;lt;%=&lt;/span&gt; &lt;span class="n"&gt;link&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Log out&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;to&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;session_path&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="vi"&gt;@conn&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:delete&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="vi"&gt;@current_user&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;                            &lt;span class="nb"&gt;method&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;delete&amp;quot;&lt;/span&gt; &lt;span class="cp"&gt;%&amp;gt;&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="x"&gt;      &amp;lt;/li&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="x"&gt;    &lt;/span&gt;&lt;span class="cp"&gt;&amp;lt;%&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="cp"&gt;%&amp;gt;&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="x"&gt;      &amp;lt;li&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&amp;lt;%=&lt;/span&gt; &lt;span class="n"&gt;link&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Register&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;to&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;user_path&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="vi"&gt;@conn&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:new&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="cp"&gt;%&amp;gt;&lt;/span&gt;&lt;span class="x"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="x"&gt;      &amp;lt;li&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&amp;lt;%=&lt;/span&gt; &lt;span class="n"&gt;link&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Log in&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;to&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;session_path&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="vi"&gt;@conn&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:new&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="cp"&gt;%&amp;gt;&lt;/span&gt;&lt;span class="x"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="x"&gt;    &lt;/span&gt;&lt;span class="cp"&gt;&amp;lt;%&lt;/span&gt; &lt;span class="k"&gt;end&lt;/span&gt; &lt;span class="cp"&gt;%&amp;gt;&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="x"&gt;  &amp;lt;/ol&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="x"&gt;  &amp;lt;span class=&amp;quot;logo&amp;quot;&amp;gt;&amp;lt;/span&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="x"&gt;&amp;lt;/header&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;div class="line-block"&gt;
&lt;div class="line"&gt;これでOKなはずです。&lt;/div&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id9"&gt;
&lt;h2&gt;まとめ&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;Plug.Conn&lt;/tt&gt; を使ったセッションやコネクションの管理はスマートだし中身が分かればわかりやすいと思いました。関数の引数に毎回 &lt;tt class="docutils literal"&gt;conn&lt;/tt&gt; が出てきちゃいますが・・・&lt;/li&gt;
&lt;li&gt;本のおかげかもしれませんが余りブラックボックスな部分を残さないよう理解出来ている感があるのが良いです。&lt;/li&gt;
&lt;li&gt;関数型だけあってかロジックを関数毎に分離しているのがとても良かったです。書いてて理解し易い気がします。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;1記事がやたらと長くなりましたが実験ということで・・・&lt;/p&gt;
&lt;/div&gt;
</summary><category term="Elixir"></category><category term="Phoenix"></category></entry><entry><title>Programming Phoenix勉強その6</title><link href="https://zonuko.github.io/posts/2017/01/11/programming-phoenix6/" rel="alternate"></link><published>2017-01-11T17:52:00+09:00</published><updated>2017-01-11T17:52:00+09:00</updated><author><name>zonuko</name></author><id>tag:zonuko.github.io,2017-01-11:posts/2017/01/11/programming-phoenix6/</id><summary type="html">&lt;div class="line-block"&gt;
&lt;div class="line"&gt;その6です。&lt;/div&gt;
&lt;div class="line"&gt;実際にDBを操作するところからです。&lt;/div&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;新規ユーザ生成処理&lt;/h2&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;tt class="docutils literal"&gt;Rumbl.UserController&lt;/tt&gt; に以下の関数を実装します。&lt;/div&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;1&lt;/span&gt;
&lt;span class="code-line"&gt;2&lt;/span&gt;
&lt;span class="code-line"&gt;3&lt;/span&gt;
&lt;span class="code-line"&gt;4&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kd"&gt;def&lt;/span&gt; &lt;span class="n"&gt;new&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;conn&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;_params&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="n"&gt;changeset&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;User&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;changeset&lt;/span&gt;&lt;span class="p"&gt;(%&lt;/span&gt;&lt;span class="nc"&gt;User&lt;/span&gt;&lt;span class="p"&gt;{})&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="n"&gt;render&lt;/span&gt; &lt;span class="n"&gt;conn&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;new.html&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;changeset&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;changeset&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="k"&gt;end&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;tt class="docutils literal"&gt;changeset&lt;/tt&gt; 周りとかが謎めいていますが一旦置いときます。単に自分が今理解してないだけですが・・・&lt;/div&gt;
&lt;div class="line"&gt;DBの操作とそれ以外の検証とかエラーとかセキュリティとかを分離するのに役立つっぽいです。&lt;/div&gt;
&lt;div class="line"&gt;&lt;tt class="docutils literal"&gt;user.ex&lt;/tt&gt; に上記で利用している &lt;tt class="docutils literal"&gt;User.changeset&lt;/tt&gt; 関数を実装します。&lt;/div&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;1&lt;/span&gt;
&lt;span class="code-line"&gt;2&lt;/span&gt;
&lt;span class="code-line"&gt;3&lt;/span&gt;
&lt;span class="code-line"&gt;4&lt;/span&gt;
&lt;span class="code-line"&gt;5&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kd"&gt;def&lt;/span&gt; &lt;span class="n"&gt;changeset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;model&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;params&lt;/span&gt; &lt;span class="p"&gt;\\&lt;/span&gt; &lt;span class="ss"&gt;:empty&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="n"&gt;model&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="o"&gt;|&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;cast&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;params&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="sx"&gt;~w(name username)&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[])&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="o"&gt;|&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;validate_length&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:username&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;min&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;max&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="k"&gt;end&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;tt class="docutils literal"&gt;Ecto&lt;/tt&gt; を使う関数を定義しました。 &lt;tt class="docutils literal"&gt;cast&lt;/tt&gt; で &lt;tt class="docutils literal"&gt;Ecto.changeset&lt;/tt&gt; を生成してバリデーションチェックを掛けているようです。&lt;/div&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;前準備&lt;/h2&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;tt class="docutils literal"&gt;:new&lt;/tt&gt; アクションを実装する前に前準備をします。&lt;/div&gt;
&lt;div class="line"&gt;今まで書いてあったルーティング設定を消して以下を追加します。まぁ説明不要だと思います。&lt;/div&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;resouces&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;/users&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nc"&gt;UserController&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;only&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:index&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:show&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:new&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:create&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;
&lt;div class="section" id="id3"&gt;
&lt;h2&gt;テンプレート実装&lt;/h2&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;tt class="docutils literal"&gt;:new&lt;/tt&gt; に対応するテンプレートを適当に作ります。&lt;/div&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="code-line"&gt; 1&lt;/span&gt;
&lt;span class="code-line"&gt; 2&lt;/span&gt;
&lt;span class="code-line"&gt; 3&lt;/span&gt;
&lt;span class="code-line"&gt; 4&lt;/span&gt;
&lt;span class="code-line"&gt; 5&lt;/span&gt;
&lt;span class="code-line"&gt; 6&lt;/span&gt;
&lt;span class="code-line"&gt; 7&lt;/span&gt;
&lt;span class="code-line"&gt; 8&lt;/span&gt;
&lt;span class="code-line"&gt; 9&lt;/span&gt;
&lt;span class="code-line"&gt;10&lt;/span&gt;
&lt;span class="code-line"&gt;11&lt;/span&gt;
&lt;span class="code-line"&gt;12&lt;/span&gt;
&lt;span class="code-line"&gt;13&lt;/span&gt;
&lt;span class="code-line"&gt;14&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="x"&gt;&amp;lt;h1&amp;gt;New User&amp;lt;/h1&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="cp"&gt;&amp;lt;%=&lt;/span&gt; &lt;span class="n"&gt;form_for&lt;/span&gt; &lt;span class="vi"&gt;@changeset&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;user_path&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="vi"&gt;@conn&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:create&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;fn&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="cp"&gt;%&amp;gt;&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="x"&gt;  &amp;lt;div class=&amp;quot;form-group&amp;quot;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="x"&gt;    &lt;/span&gt;&lt;span class="cp"&gt;&amp;lt;%=&lt;/span&gt; &lt;span class="n"&gt;text_input&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;placeholder&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Name&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;class&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;form-control&amp;quot;&lt;/span&gt; &lt;span class="cp"&gt;%&amp;gt;&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="x"&gt;  &amp;lt;/div&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="x"&gt;  &amp;lt;div class=&amp;quot;form-group&amp;quot;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="x"&gt;    &lt;/span&gt;&lt;span class="cp"&gt;&amp;lt;%=&lt;/span&gt; &lt;span class="n"&gt;text_input&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:username&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;placeholder&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Username&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;class&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;form-control&amp;quot;&lt;/span&gt; &lt;span class="cp"&gt;%&amp;gt;&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="x"&gt;  &amp;lt;/div&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="x"&gt;  &amp;lt;div class=&amp;quot;form-group&amp;quot;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="x"&gt;    &lt;/span&gt;&lt;span class="cp"&gt;&amp;lt;%=&lt;/span&gt; &lt;span class="n"&gt;password_input&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:password&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;placeholder&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Password&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;class&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;form-control&amp;quot;&lt;/span&gt; &lt;span class="cp"&gt;%&amp;gt;&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="x"&gt;  &amp;lt;/div&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="x"&gt;  &lt;/span&gt;&lt;span class="cp"&gt;&amp;lt;%=&lt;/span&gt; &lt;span class="n"&gt;submit&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Create User&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;class&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;btn, btn-primary&amp;quot;&lt;/span&gt; &lt;span class="cp"&gt;%&amp;gt;&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="cp"&gt;&amp;lt;%&lt;/span&gt; &lt;span class="k"&gt;end&lt;/span&gt; &lt;span class="cp"&gt;%&amp;gt;&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;div class="line-block"&gt;
&lt;div class="line"&gt;ここまでやって起動したところ、何やらWarningが出たので解消します。&lt;/div&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="code-line"&gt; 1&lt;/span&gt;
&lt;span class="code-line"&gt; 2&lt;/span&gt;
&lt;span class="code-line"&gt; 3&lt;/span&gt;
&lt;span class="code-line"&gt; 4&lt;/span&gt;
&lt;span class="code-line"&gt; 5&lt;/span&gt;
&lt;span class="code-line"&gt; 6&lt;/span&gt;
&lt;span class="code-line"&gt; 7&lt;/span&gt;
&lt;span class="code-line"&gt; 8&lt;/span&gt;
&lt;span class="code-line"&gt; 9&lt;/span&gt;
&lt;span class="code-line"&gt;10&lt;/span&gt;
&lt;span class="code-line"&gt;11&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;warning: &lt;span class="sb"&gt;`&lt;/span&gt;Ecto.Changeset.cast/4&lt;span class="sb"&gt;`&lt;/span&gt; is deprecated, please use &lt;span class="sb"&gt;`&lt;/span&gt;cast/3&lt;span class="sb"&gt;`&lt;/span&gt; + &lt;span class="sb"&gt;`&lt;/span&gt;validate_required/3&lt;span class="sb"&gt;`&lt;/span&gt; instead&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="o"&gt;(&lt;/span&gt;rumbl&lt;span class="o"&gt;)&lt;/span&gt; web/models/user.ex:15: Rumbl.User.changeset/2&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="o"&gt;(&lt;/span&gt;rumbl&lt;span class="o"&gt;)&lt;/span&gt; web/controllers/user_controller.ex:16: Rumbl.UserController.new/2&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="o"&gt;(&lt;/span&gt;rumbl&lt;span class="o"&gt;)&lt;/span&gt; web/controllers/user_controller.ex:1: Rumbl.UserController.action/2&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="o"&gt;(&lt;/span&gt;rumbl&lt;span class="o"&gt;)&lt;/span&gt; web/controllers/user_controller.ex:1: Rumbl.UserController.phoenix_controller_pipeline/2&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;warning: passing :empty to Ecto.Changeset.cast/3 is deprecated, please pass an empty map or :invalid instead&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="o"&gt;(&lt;/span&gt;rumbl&lt;span class="o"&gt;)&lt;/span&gt; web/models/user.ex:15: Rumbl.User.changeset/2&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="o"&gt;(&lt;/span&gt;rumbl&lt;span class="o"&gt;)&lt;/span&gt; web/controllers/user_controller.ex:16: Rumbl.UserController.new/2&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="o"&gt;(&lt;/span&gt;rumbl&lt;span class="o"&gt;)&lt;/span&gt; web/controllers/user_controller.ex:1: Rumbl.UserController.action/2&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="o"&gt;(&lt;/span&gt;rumbl&lt;span class="o"&gt;)&lt;/span&gt; web/controllers/user_controller.ex:1: Rumbl.UserController.phoenix_controller_pipeline/2&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;
&lt;div class="section" id="warning"&gt;
&lt;h2&gt;Warningの解消&lt;/h2&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;tt class="docutils literal"&gt;Ecto&lt;/tt&gt; とかのバージョの違いのせいか2つWarningが出てました。1つは &lt;tt class="docutils literal"&gt;user.ex&lt;/tt&gt; の &lt;tt class="docutils literal"&gt;changeset/2&lt;/tt&gt; 関数のデフォルト引数で &lt;tt class="docutils literal"&gt;:empty&lt;/tt&gt; としていた部分です。&lt;/div&gt;
&lt;div class="line"&gt;その部分を以下のように変えます。&lt;/div&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kd"&gt;def&lt;/span&gt; &lt;span class="n"&gt;changeset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;model&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;params&lt;/span&gt; &lt;span class="p"&gt;\\&lt;/span&gt; &lt;span class="p"&gt;%{})&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;div class="line-block"&gt;
&lt;div class="line"&gt;単純に空の &lt;tt class="docutils literal"&gt;Map&lt;/tt&gt; にしただけですね。&lt;/div&gt;
&lt;div class="line"&gt;もう1つ &lt;tt class="docutils literal"&gt;cast/4&lt;/tt&gt; 関数を呼び出している部分でもWarningが出ているので修正します。&lt;/div&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;1&lt;/span&gt;
&lt;span class="code-line"&gt;2&lt;/span&gt;
&lt;span class="code-line"&gt;3&lt;/span&gt;
&lt;span class="code-line"&gt;4&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;model&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;|&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;cast&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;params&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:username&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;|&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;validate_required&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="ss"&gt;:name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:username&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;|&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;validate_length&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:username&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;min&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;max&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;a class="reference external" href="http://www.phoenixframework.org/docs/ecto-models"&gt;ここ&lt;/a&gt; とか &lt;a class="reference external" href="https://hexdocs.pm/ecto/Ecto.Changeset.html#cast/4"&gt;ここらへん&lt;/a&gt; 参考にしましたが英語力の無さ故にあってるかわからないです。誰か教えて!!&lt;/div&gt;
&lt;div class="line"&gt;パラメータの名前的にはあってそうですが・・・&lt;/div&gt;
&lt;div class="line"&gt;また、これを見ると &lt;tt class="docutils literal"&gt;cast&lt;/tt&gt; が &lt;tt class="docutils literal"&gt;changeset&lt;/tt&gt; を返してきて、それに対してバリデーションを掛けているのがわかります。&lt;/div&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="create"&gt;
&lt;h2&gt;Createアクションの実装&lt;/h2&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;tt class="docutils literal"&gt;new&lt;/tt&gt; アクションを実装したので実際にDBにインサートする &lt;tt class="docutils literal"&gt;create&lt;/tt&gt; アクションを実装します。&lt;/div&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="code-line"&gt; 1&lt;/span&gt;
&lt;span class="code-line"&gt; 2&lt;/span&gt;
&lt;span class="code-line"&gt; 3&lt;/span&gt;
&lt;span class="code-line"&gt; 4&lt;/span&gt;
&lt;span class="code-line"&gt; 5&lt;/span&gt;
&lt;span class="code-line"&gt; 6&lt;/span&gt;
&lt;span class="code-line"&gt; 7&lt;/span&gt;
&lt;span class="code-line"&gt; 8&lt;/span&gt;
&lt;span class="code-line"&gt; 9&lt;/span&gt;
&lt;span class="code-line"&gt;10&lt;/span&gt;
&lt;span class="code-line"&gt;11&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kd"&gt;def&lt;/span&gt; &lt;span class="n"&gt;create&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;conn&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;%{&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;user&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;user_params&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="n"&gt;changeset&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;User&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;changeset&lt;/span&gt;&lt;span class="p"&gt;(%&lt;/span&gt;&lt;span class="nc"&gt;User&lt;/span&gt;&lt;span class="p"&gt;{},&lt;/span&gt; &lt;span class="n"&gt;user_params&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="nc"&gt;Repo&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;insert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;changeset&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="ss"&gt;:ok&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;      &lt;span class="n"&gt;conn&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;      &lt;span class="o"&gt;|&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;put_flash&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:info&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; created!&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;      &lt;span class="o"&gt;|&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;redirect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;to&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;user_path&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;conn&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:index&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="ss"&gt;:error&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;changeset&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;      &lt;span class="n"&gt;render&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;conn&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;new.html&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;changeset&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;changeset&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="k"&gt;end&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="k"&gt;end&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;div class="line-block"&gt;
&lt;div class="line"&gt;あんまり説明することはないですが、 &lt;tt class="docutils literal"&gt;conn&lt;/tt&gt; からのパイプラインで作成後の &lt;tt class="docutils literal"&gt;template&lt;/tt&gt; 用の処理を読んでる点くらいでしょうか。パイプラインが最大の特徴かもしれませんが・・・&lt;/div&gt;
&lt;div class="line"&gt;また、 &lt;tt class="docutils literal"&gt;new.html.eex&lt;/tt&gt; もエラーを表示するように変えます。&lt;/div&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="code-line"&gt; 1&lt;/span&gt;
&lt;span class="code-line"&gt; 2&lt;/span&gt;
&lt;span class="code-line"&gt; 3&lt;/span&gt;
&lt;span class="code-line"&gt; 4&lt;/span&gt;
&lt;span class="code-line"&gt; 5&lt;/span&gt;
&lt;span class="code-line"&gt; 6&lt;/span&gt;
&lt;span class="code-line"&gt; 7&lt;/span&gt;
&lt;span class="code-line"&gt; 8&lt;/span&gt;
&lt;span class="code-line"&gt; 9&lt;/span&gt;
&lt;span class="code-line"&gt;10&lt;/span&gt;
&lt;span class="code-line"&gt;11&lt;/span&gt;
&lt;span class="code-line"&gt;12&lt;/span&gt;
&lt;span class="code-line"&gt;13&lt;/span&gt;
&lt;span class="code-line"&gt;14&lt;/span&gt;
&lt;span class="code-line"&gt;15&lt;/span&gt;
&lt;span class="code-line"&gt;16&lt;/span&gt;
&lt;span class="code-line"&gt;17&lt;/span&gt;
&lt;span class="code-line"&gt;18&lt;/span&gt;
&lt;span class="code-line"&gt;19&lt;/span&gt;
&lt;span class="code-line"&gt;20&lt;/span&gt;
&lt;span class="code-line"&gt;21&lt;/span&gt;
&lt;span class="code-line"&gt;22&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="x"&gt;&amp;lt;h1&amp;gt;New User&amp;lt;/h1&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="cp"&gt;&amp;lt;%=&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="vi"&gt;@changeset&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;action&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="cp"&gt;%&amp;gt;&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="x"&gt;  &amp;lt;div class=&amp;quot;alert alert-danger&amp;quot;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="x"&gt;    &amp;lt;p&amp;gt;Oops, something went wrong! Please check the errors below.&amp;lt;/p&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="x"&gt;  &amp;lt;/div&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="cp"&gt;&amp;lt;%&lt;/span&gt; &lt;span class="k"&gt;end&lt;/span&gt; &lt;span class="cp"&gt;%&amp;gt;&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="cp"&gt;&amp;lt;%=&lt;/span&gt; &lt;span class="n"&gt;form_for&lt;/span&gt; &lt;span class="vi"&gt;@changeset&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;user_path&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="vi"&gt;@conn&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:create&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;fn&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="cp"&gt;%&amp;gt;&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="x"&gt;  &amp;lt;div class=&amp;quot;form-group&amp;quot;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="x"&gt;    &lt;/span&gt;&lt;span class="cp"&gt;&amp;lt;%=&lt;/span&gt; &lt;span class="n"&gt;text_input&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;placeholder&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Name&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;class&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;form-control&amp;quot;&lt;/span&gt; &lt;span class="cp"&gt;%&amp;gt;&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="x"&gt;    &lt;/span&gt;&lt;span class="cp"&gt;&amp;lt;%=&lt;/span&gt; &lt;span class="n"&gt;error_tag&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:name&lt;/span&gt; &lt;span class="cp"&gt;%&amp;gt;&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="x"&gt;  &amp;lt;/div&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="x"&gt;  &amp;lt;div class=&amp;quot;form-group&amp;quot;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="x"&gt;    &lt;/span&gt;&lt;span class="cp"&gt;&amp;lt;%=&lt;/span&gt; &lt;span class="n"&gt;text_input&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:username&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;placeholder&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Username&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;class&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;form-control&amp;quot;&lt;/span&gt; &lt;span class="cp"&gt;%&amp;gt;&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="x"&gt;    &lt;/span&gt;&lt;span class="cp"&gt;&amp;lt;%=&lt;/span&gt; &lt;span class="n"&gt;error_tag&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:username&lt;/span&gt; &lt;span class="cp"&gt;%&amp;gt;&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="x"&gt;  &amp;lt;/div&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="x"&gt;  &amp;lt;div class=&amp;quot;form-group&amp;quot;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="x"&gt;    &lt;/span&gt;&lt;span class="cp"&gt;&amp;lt;%=&lt;/span&gt; &lt;span class="n"&gt;password_input&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:password&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;placeholder&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Password&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;class&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;form-control&amp;quot;&lt;/span&gt; &lt;span class="cp"&gt;%&amp;gt;&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="x"&gt;    &lt;/span&gt;&lt;span class="cp"&gt;&amp;lt;%=&lt;/span&gt; &lt;span class="n"&gt;error_tag&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:password&lt;/span&gt; &lt;span class="cp"&gt;%&amp;gt;&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="x"&gt;  &amp;lt;/div&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="x"&gt;  &lt;/span&gt;&lt;span class="cp"&gt;&amp;lt;%=&lt;/span&gt; &lt;span class="n"&gt;submit&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Create User&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;class&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;btn, btn-primary&amp;quot;&lt;/span&gt; &lt;span class="cp"&gt;%&amp;gt;&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="cp"&gt;&amp;lt;%&lt;/span&gt; &lt;span class="k"&gt;end&lt;/span&gt; &lt;span class="cp"&gt;%&amp;gt;&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;tt class="docutils literal"&gt;error_tag/2&lt;/tt&gt; 関数は &lt;tt class="docutils literal"&gt;view&lt;/tt&gt; の &lt;tt class="docutils literal"&gt;error_helpers.ex&lt;/tt&gt; に定義されている関数です。&lt;/div&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="changeset"&gt;
&lt;h2&gt;Changesetについて&lt;/h2&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;このchapterの最後に &lt;tt class="docutils literal"&gt;changeset&lt;/tt&gt; について触れられています。&lt;/div&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="code-line"&gt; 1&lt;/span&gt;
&lt;span class="code-line"&gt; 2&lt;/span&gt;
&lt;span class="code-line"&gt; 3&lt;/span&gt;
&lt;span class="code-line"&gt; 4&lt;/span&gt;
&lt;span class="code-line"&gt; 5&lt;/span&gt;
&lt;span class="code-line"&gt; 6&lt;/span&gt;
&lt;span class="code-line"&gt; 7&lt;/span&gt;
&lt;span class="code-line"&gt; 8&lt;/span&gt;
&lt;span class="code-line"&gt; 9&lt;/span&gt;
&lt;span class="code-line"&gt;10&lt;/span&gt;
&lt;span class="code-line"&gt;11&lt;/span&gt;
&lt;span class="code-line"&gt;12&lt;/span&gt;
&lt;span class="code-line"&gt;13&lt;/span&gt;
&lt;span class="code-line"&gt;14&lt;/span&gt;
&lt;span class="code-line"&gt;15&lt;/span&gt;
&lt;span class="code-line"&gt;16&lt;/span&gt;
&lt;span class="code-line"&gt;17&lt;/span&gt;
&lt;span class="code-line"&gt;18&lt;/span&gt;
&lt;span class="code-line"&gt;19&lt;/span&gt;
&lt;span class="code-line"&gt;20&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;iex&lt;span class="o"&gt;(&lt;/span&gt;1&lt;span class="o"&gt;)&lt;/span&gt;&amp;gt; &lt;span class="nv"&gt;changeset&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; Rumbl.User.changeset&lt;span class="o"&gt;(&lt;/span&gt;%Rumbl.User&lt;span class="o"&gt;{&lt;/span&gt;username: &lt;span class="s2"&gt;&amp;quot;eric&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;})&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;#Ecto.Changeset&amp;lt;action: nil, changes: %{},&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt; errors: &lt;span class="o"&gt;[&lt;/span&gt;name: &lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;can&amp;#39;t be blank&amp;quot;&lt;/span&gt;, &lt;span class="o"&gt;[&lt;/span&gt;validation: :required&lt;span class="o"&gt;]}]&lt;/span&gt;,&lt;/span&gt;
&lt;span class="code-line"&gt; data: &lt;span class="c1"&gt;#Rumbl.User&amp;lt;&amp;gt;, valid?: false&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;iex&lt;span class="o"&gt;(&lt;/span&gt;2&lt;span class="o"&gt;)&lt;/span&gt;&amp;gt; changeset&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;#Ecto.Changeset&amp;lt;action: nil, changes: %{},&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt; errors: &lt;span class="o"&gt;[&lt;/span&gt;name: &lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;can&amp;#39;t be blank&amp;quot;&lt;/span&gt;, &lt;span class="o"&gt;[&lt;/span&gt;validation: :required&lt;span class="o"&gt;]}]&lt;/span&gt;,&lt;/span&gt;
&lt;span class="code-line"&gt; data: &lt;span class="c1"&gt;#Rumbl.User&amp;lt;&amp;gt;, valid?: false&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;iex&lt;span class="o"&gt;(&lt;/span&gt;3&lt;span class="o"&gt;)&lt;/span&gt;&amp;gt; import Ecto.Changeset&lt;/span&gt;
&lt;span class="code-line"&gt;Ecto.Changeset&lt;/span&gt;
&lt;span class="code-line"&gt;iex&lt;span class="o"&gt;(&lt;/span&gt;4&lt;span class="o"&gt;)&lt;/span&gt;&amp;gt; changeset.changes&lt;/span&gt;
&lt;span class="code-line"&gt;%&lt;span class="o"&gt;{}&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;iex&lt;span class="o"&gt;(&lt;/span&gt;5&lt;span class="o"&gt;)&lt;/span&gt;&amp;gt; &lt;span class="nv"&gt;changeset&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; put_change&lt;span class="o"&gt;(&lt;/span&gt;changeset, :username, &lt;span class="s2"&gt;&amp;quot;ericmj&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;#Ecto.Changeset&amp;lt;action: nil, changes: %{username: &amp;quot;ericmj&amp;quot;},&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt; errors: &lt;span class="o"&gt;[&lt;/span&gt;name: &lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;can&amp;#39;t be blank&amp;quot;&lt;/span&gt;, &lt;span class="o"&gt;[&lt;/span&gt;validation: :required&lt;span class="o"&gt;]}]&lt;/span&gt;,&lt;/span&gt;
&lt;span class="code-line"&gt; data: &lt;span class="c1"&gt;#Rumbl.User&amp;lt;&amp;gt;, valid?: false&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;iex&lt;span class="o"&gt;(&lt;/span&gt;6&lt;span class="o"&gt;)&lt;/span&gt;&amp;gt; changeset.changes&lt;/span&gt;
&lt;span class="code-line"&gt;%&lt;span class="o"&gt;{&lt;/span&gt;username: &lt;span class="s2"&gt;&amp;quot;ericmj&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;iex&lt;span class="o"&gt;(&lt;/span&gt;7&lt;span class="o"&gt;)&lt;/span&gt;&amp;gt; get_change&lt;span class="o"&gt;(&lt;/span&gt;changeset, :username&lt;span class="o"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="s2"&gt;&amp;quot;ericmj&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;div class="line-block"&gt;
&lt;div class="line"&gt;これを見ると &lt;tt class="docutils literal"&gt;changeset&lt;/tt&gt; はバリデーション以外にも変更をの追跡と保持を行っていることがわかります。&lt;/div&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id6"&gt;
&lt;h2&gt;まとめ&lt;/h2&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;簡単なDB操作を行いました。今回はテンプレート周りはおまけだったように思います。&lt;/div&gt;
&lt;div class="line"&gt;何かしらフレームワーク触ったことあればそんなに違和感はなく使えると思います。&lt;/div&gt;
&lt;div class="line"&gt;ずっと &lt;tt class="docutils literal"&gt;changeset&lt;/tt&gt; が謎だったんですが、少し理解できたと思います。&lt;/div&gt;
&lt;div class="line"&gt;基本的なところは結構網羅されてきたんじゃないかと思いますのでサクサク行きたいです。&lt;/div&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</summary><category term="Elixir"></category><category term="Phoenix"></category></entry><entry><title>Programming Phoenix勉強その5</title><link href="https://zonuko.github.io/posts/2017/01/09/programming-phoenix5/" rel="alternate"></link><published>2017-01-09T17:52:00+09:00</published><updated>2017-01-09T17:52:00+09:00</updated><author><name>zonuko</name></author><id>tag:zonuko.github.io,2017-01-09:posts/2017/01/09/programming-phoenix5/</id><summary type="html">&lt;div class="line-block"&gt;
&lt;div class="line"&gt;その5です。ここからChapter4です。&lt;/div&gt;
&lt;div class="line"&gt;&lt;tt class="docutils literal"&gt;Ecto&lt;/tt&gt; を使って独自実装してた &lt;tt class="docutils literal"&gt;Repository&lt;/tt&gt; を &lt;tt class="docutils literal"&gt;Postgres&lt;/tt&gt; に置き換えていきます。&lt;/div&gt;
&lt;div class="line"&gt;まず &lt;tt class="docutils literal"&gt;lib/rumbl/repo.ex&lt;/tt&gt; をもとに戻します。&lt;/div&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;1&lt;/span&gt;
&lt;span class="code-line"&gt;2&lt;/span&gt;
&lt;span class="code-line"&gt;3&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kd"&gt;defmodule&lt;/span&gt; &lt;span class="nc"&gt;Rumbl.Repo&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="nc"&gt;Ecto.Repo&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;otp_app&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="ss"&gt;:rumbl&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="k"&gt;end&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;div class="line-block"&gt;
&lt;div class="line"&gt;さらに &lt;tt class="docutils literal"&gt;lib/rumbl.ex&lt;/tt&gt; でコメントアウトした部分をもとに戻します。&lt;/div&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;1&lt;/span&gt;
&lt;span class="code-line"&gt;2&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Start the Ecto repository&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="n"&gt;supervisor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;Rumbl.Repo&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[]),&lt;/span&gt; &lt;span class="c1"&gt;# ここのコメントアウトを戻す&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;div class="line-block"&gt;
&lt;div class="line"&gt;まだ &lt;tt class="docutils literal"&gt;mix ecto.create&lt;/tt&gt; をしてなければしておきます。&lt;/div&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="model"&gt;
&lt;h2&gt;modelの実装&lt;/h2&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;次に &lt;tt class="docutils literal"&gt;model&lt;/tt&gt; の実装を行います。&lt;/div&gt;
&lt;div class="line"&gt;&lt;tt class="docutils literal"&gt;web/model/user.ex&lt;/tt&gt; を以下の内容で実装します。&lt;/div&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="code-line"&gt; 1&lt;/span&gt;
&lt;span class="code-line"&gt; 2&lt;/span&gt;
&lt;span class="code-line"&gt; 3&lt;/span&gt;
&lt;span class="code-line"&gt; 4&lt;/span&gt;
&lt;span class="code-line"&gt; 5&lt;/span&gt;
&lt;span class="code-line"&gt; 6&lt;/span&gt;
&lt;span class="code-line"&gt; 7&lt;/span&gt;
&lt;span class="code-line"&gt; 8&lt;/span&gt;
&lt;span class="code-line"&gt; 9&lt;/span&gt;
&lt;span class="code-line"&gt;10&lt;/span&gt;
&lt;span class="code-line"&gt;11&lt;/span&gt;
&lt;span class="code-line"&gt;12&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kd"&gt;defmodule&lt;/span&gt; &lt;span class="nc"&gt;Rumbl.User&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="nc"&gt;Rumbl.Web&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:model&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="n"&gt;schema&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;users&amp;quot;&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="n"&gt;field&lt;/span&gt; &lt;span class="ss"&gt;:name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:string&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="n"&gt;field&lt;/span&gt; &lt;span class="ss"&gt;:username&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:string&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="n"&gt;field&lt;/span&gt; &lt;span class="ss"&gt;:password&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:string&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;virtual&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;true&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="n"&gt;field&lt;/span&gt; &lt;span class="ss"&gt;:password_hash&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:string&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="n"&gt;timestamps&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="k"&gt;end&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="k"&gt;end&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;tt class="docutils literal"&gt;ActiveRecord&lt;/tt&gt; 使ったことがあればそんなに違和感なく受け入れられると思います。&lt;/div&gt;
&lt;div class="line"&gt;&lt;tt class="docutils literal"&gt;:virtual&lt;/tt&gt; オプションは値として受け取るが、DBには保存しない値です。&lt;/div&gt;
&lt;div class="line"&gt;ここまで行って起動してみたら以下のような警告が出ました。&lt;/div&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;1&lt;/span&gt;
&lt;span class="code-line"&gt;2&lt;/span&gt;
&lt;span class="code-line"&gt;3&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;warning: variable &lt;span class="s2"&gt;&amp;quot;timestamps&amp;quot;&lt;/span&gt; does not exist and is being expanded to &lt;span class="s2"&gt;&amp;quot;timestamps()&amp;quot;&lt;/span&gt;,&lt;/span&gt;
&lt;span class="code-line"&gt;please use parentheses to remove the ambiguity or change the variable name&lt;/span&gt;
&lt;span class="code-line"&gt;  web/models/user.ex:10&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;tt class="docutils literal"&gt;timestamps&lt;/tt&gt; が変数なのか &lt;tt class="docutils literal"&gt;timestamps/0&lt;/tt&gt; の関数呼び出しか曖昧だと言われてるようです。&lt;/div&gt;
&lt;div class="line"&gt;今回は &lt;tt class="docutils literal"&gt;timestamps/0&lt;/tt&gt; の呼び出しなので &lt;tt class="docutils literal"&gt;timestamps&lt;/tt&gt; の部分を &lt;tt class="docutils literal"&gt;timestamps()&lt;/tt&gt; にすると警告がでなくなります。 &lt;a class="reference external" href="http://www.phoenixframework.org/docs/ecto-models"&gt;ここらへん&lt;/a&gt; を参考にしました。&lt;/div&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div class="line"&gt;最後に &lt;tt class="docutils literal"&gt;web/web.ex&lt;/tt&gt; の &lt;tt class="docutils literal"&gt;model&lt;/tt&gt; 関数を以下のように変更します。&lt;/div&gt;
&lt;/div&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;1&lt;/span&gt;
&lt;span class="code-line"&gt;2&lt;/span&gt;
&lt;span class="code-line"&gt;3&lt;/span&gt;
&lt;span class="code-line"&gt;4&lt;/span&gt;
&lt;span class="code-line"&gt;5&lt;/span&gt;
&lt;span class="code-line"&gt;6&lt;/span&gt;
&lt;span class="code-line"&gt;7&lt;/span&gt;
&lt;span class="code-line"&gt;8&lt;/span&gt;
&lt;span class="code-line"&gt;9&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kd"&gt;def&lt;/span&gt; &lt;span class="n"&gt;model&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="k"&gt;quote&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="nc"&gt;Ecto.Schema&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nc"&gt;Ecto&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nc"&gt;Ecto.Changeset&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nc"&gt;Ecto.Query&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;only&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;from&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;from&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="c1"&gt;# only以下を追加&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="k"&gt;end&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="k"&gt;end&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;
&lt;div class="section" id="db"&gt;
&lt;h2&gt;DBのマイグレーション&lt;/h2&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;DB側にもテーブルとかを作る必要があるので以下のコマンドを実行します。&lt;/div&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;1&lt;/span&gt;
&lt;span class="code-line"&gt;2&lt;/span&gt;
&lt;span class="code-line"&gt;3&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;rumbl $ mix ecto.gen.migration create_user&lt;/span&gt;
&lt;span class="code-line"&gt;* creating priv/repo/migrations&lt;/span&gt;
&lt;span class="code-line"&gt;* creating priv/repo/migrations/20170108070642_create_user.exs&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;div class="line-block"&gt;
&lt;div class="line"&gt;生成された &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;priv/repo/migrations/{日付}_create_user.exs&lt;/span&gt;&lt;/tt&gt; ファイルを以下のように変更します。&lt;/div&gt;
&lt;div class="line"&gt;これもRailsやったことあれば説明不要だと思います。&lt;/div&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="code-line"&gt; 1&lt;/span&gt;
&lt;span class="code-line"&gt; 2&lt;/span&gt;
&lt;span class="code-line"&gt; 3&lt;/span&gt;
&lt;span class="code-line"&gt; 4&lt;/span&gt;
&lt;span class="code-line"&gt; 5&lt;/span&gt;
&lt;span class="code-line"&gt; 6&lt;/span&gt;
&lt;span class="code-line"&gt; 7&lt;/span&gt;
&lt;span class="code-line"&gt; 8&lt;/span&gt;
&lt;span class="code-line"&gt; 9&lt;/span&gt;
&lt;span class="code-line"&gt;10&lt;/span&gt;
&lt;span class="code-line"&gt;11&lt;/span&gt;
&lt;span class="code-line"&gt;12&lt;/span&gt;
&lt;span class="code-line"&gt;13&lt;/span&gt;
&lt;span class="code-line"&gt;14&lt;/span&gt;
&lt;span class="code-line"&gt;15&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kd"&gt;defmodule&lt;/span&gt; &lt;span class="nc"&gt;Rumbl.Repo.Migrations.CreateUser&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="nc"&gt;Ecto.Migration&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="kd"&gt;def&lt;/span&gt; &lt;span class="n"&gt;change&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="n"&gt;create&lt;/span&gt; &lt;span class="n"&gt;table&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:users&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;      &lt;span class="n"&gt;add&lt;/span&gt; &lt;span class="ss"&gt;:name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:string&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;      &lt;span class="n"&gt;add&lt;/span&gt; &lt;span class="ss"&gt;:username&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:string&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;null&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;false&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;      &lt;span class="n"&gt;add&lt;/span&gt; &lt;span class="ss"&gt;:password_hash&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:string&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;      &lt;span class="n"&gt;timestamps&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="k"&gt;end&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="n"&gt;create&lt;/span&gt; &lt;span class="n"&gt;unique_index&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:users&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:username&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="k"&gt;end&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="k"&gt;end&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;tt class="docutils literal"&gt;mix ecto.migrate&lt;/tt&gt; でマイグレーションを実行します。&lt;/div&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;まとめ&lt;/h2&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;tt class="docutils literal"&gt;Model&lt;/tt&gt; 周りの話でした。O/Rマッパー使ったことあればあまり違和感なく受け入れられそうでした。&lt;/div&gt;
&lt;div class="line"&gt;関係ないですけど、基本的な部分終わったらガンガン飛ばしていこうと思います。亀のようなペースだと全然おわらないので。&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</summary><category term="Elixir"></category><category term="Phoenix"></category></entry><entry><title>Programming Phoenix勉強その4</title><link href="https://zonuko.github.io/posts/2017/01/07/programming-phoenix4/" rel="alternate"></link><published>2017-01-07T00:43:00+09:00</published><updated>2017-01-07T00:43:00+09:00</updated><author><name>zonuko</name></author><id>tag:zonuko.github.io,2017-01-07:posts/2017/01/07/programming-phoenix4/</id><summary type="html">&lt;div class="line-block"&gt;
&lt;div class="line"&gt;その4です。&lt;/div&gt;
&lt;div class="line"&gt;その3の続きです。&lt;/div&gt;
&lt;div class="line"&gt;&lt;tt class="docutils literal"&gt;:show&lt;/tt&gt; アクションの実装からです.&lt;/div&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="show"&gt;
&lt;h2&gt;:showアクションの実装&lt;/h2&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;tt class="docutils literal"&gt;:show&lt;/tt&gt; アクションで各ユーザの詳細を表示できるようにします.&lt;/div&gt;
&lt;div class="line"&gt;まず &lt;tt class="docutils literal"&gt;Controler&lt;/tt&gt; を実装します.&lt;/div&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;1&lt;/span&gt;
&lt;span class="code-line"&gt;2&lt;/span&gt;
&lt;span class="code-line"&gt;3&lt;/span&gt;
&lt;span class="code-line"&gt;4&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kd"&gt;def&lt;/span&gt; &lt;span class="n"&gt;show&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;conn&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;%{&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;id&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="n"&gt;user&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;Repo&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;Rumbl.User&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="n"&gt;render&lt;/span&gt; &lt;span class="n"&gt;conn&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;show.html&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;user&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;user&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="k"&gt;end&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;div class="line-block"&gt;
&lt;div class="line"&gt;次に, &lt;tt class="docutils literal"&gt;web/templates/user/show.html.eex&lt;/tt&gt; を以下の内容で実装します.&lt;/div&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;1&lt;/span&gt;
&lt;span class="code-line"&gt;2&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="x"&gt;&amp;lt;h1&amp;gt;Showing User&amp;lt;/h1&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="x"&gt;&amp;lt;b&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&amp;lt;%=&lt;/span&gt; &lt;span class="n"&gt;first_name&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="vi"&gt;@user&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="cp"&gt;%&amp;gt;&lt;/span&gt;&lt;span class="x"&gt;&amp;lt;/b&amp;gt; (&lt;/span&gt;&lt;span class="cp"&gt;&amp;lt;%=&lt;/span&gt; &lt;span class="vi"&gt;@user&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt; &lt;span class="cp"&gt;%&amp;gt;&lt;/span&gt;&lt;span class="x"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;div class="line-block"&gt;
&lt;div class="line"&gt;よく見ると &lt;tt class="docutils literal"&gt;&amp;lt;b&amp;gt;&lt;/tt&gt; タグの部分が &lt;tt class="docutils literal"&gt;index.html.eex&lt;/tt&gt; とかぶっているのがわかります.&lt;/div&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="template"&gt;
&lt;h3&gt;templateの分離&lt;/h3&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;各テンプレートで重複している部分を別テンプレートに分離します.&lt;/div&gt;
&lt;div class="line"&gt;&lt;tt class="docutils literal"&gt;web/templates/user/user.html.eex&lt;/tt&gt; を以下の内容で実装します.&lt;/div&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="x"&gt;&amp;lt;b&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&amp;lt;%=&lt;/span&gt; &lt;span class="n"&gt;first_name&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="vi"&gt;@user&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="cp"&gt;%&amp;gt;&lt;/span&gt;&lt;span class="x"&gt;&amp;lt;/b&amp;gt; (&lt;/span&gt;&lt;span class="cp"&gt;&amp;lt;%=&lt;/span&gt; &lt;span class="vi"&gt;@user&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt; &lt;span class="cp"&gt;%&amp;gt;&lt;/span&gt;&lt;span class="x"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;div class="line-block"&gt;
&lt;div class="line"&gt;共通部分をくくりだしたので,既存のテンプレートを編集します.&lt;/div&gt;
&lt;div class="line"&gt;&lt;tt class="docutils literal"&gt;web/templates/user/index.html.eex&lt;/tt&gt; を以下の内容に変更します.&lt;/div&gt;
&lt;div class="line"&gt;&lt;tt class="docutils literal"&gt;&amp;lt;%= render &amp;quot;user.html&amp;quot;, user: user %&amp;gt;&lt;/tt&gt; の部分が変更点です.&lt;/div&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="code-line"&gt; 1&lt;/span&gt;
&lt;span class="code-line"&gt; 2&lt;/span&gt;
&lt;span class="code-line"&gt; 3&lt;/span&gt;
&lt;span class="code-line"&gt; 4&lt;/span&gt;
&lt;span class="code-line"&gt; 5&lt;/span&gt;
&lt;span class="code-line"&gt; 6&lt;/span&gt;
&lt;span class="code-line"&gt; 7&lt;/span&gt;
&lt;span class="code-line"&gt; 8&lt;/span&gt;
&lt;span class="code-line"&gt; 9&lt;/span&gt;
&lt;span class="code-line"&gt;10&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="x"&gt;&amp;lt;h1&amp;gt;Listing Users&amp;lt;/h1&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="x"&gt;&amp;lt;table class=&amp;quot;table&amp;quot;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="x"&gt;  &lt;/span&gt;&lt;span class="cp"&gt;&amp;lt;%=&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;user&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="vi"&gt;@users&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="cp"&gt;%&amp;gt;&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="x"&gt;    &amp;lt;tr&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="x"&gt;      &amp;lt;td&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&amp;lt;%=&lt;/span&gt; &lt;span class="n"&gt;render&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;user.html&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;user&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;user&lt;/span&gt; &lt;span class="cp"&gt;%&amp;gt;&lt;/span&gt;&lt;span class="x"&gt;&amp;lt;/td&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="x"&gt;      &amp;lt;td&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&amp;lt;%=&lt;/span&gt; &lt;span class="n"&gt;link&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;View&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;to&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;user_path&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="vi"&gt;@conn&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:show&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="cp"&gt;%&amp;gt;&lt;/span&gt;&lt;span class="x"&gt;&amp;lt;/td&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="x"&gt;    &amp;lt;/tr&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="x"&gt;  &lt;/span&gt;&lt;span class="cp"&gt;&amp;lt;%&lt;/span&gt; &lt;span class="k"&gt;end&lt;/span&gt; &lt;span class="cp"&gt;%&amp;gt;&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="x"&gt;&amp;lt;/table&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;tt class="docutils literal"&gt;web/templates/user/show.html.eex&lt;/tt&gt; も同様に変更します.&lt;/div&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;1&lt;/span&gt;
&lt;span class="code-line"&gt;2&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="x"&gt;&amp;lt;h1&amp;gt;Showing User&amp;lt;/h1&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="cp"&gt;&amp;lt;%=&lt;/span&gt; &lt;span class="n"&gt;render&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;user.html&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;user&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="vi"&gt;@user&lt;/span&gt; &lt;span class="cp"&gt;%&amp;gt;&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;tt class="docutils literal"&gt;view&lt;/tt&gt; はモジュール, &lt;tt class="docutils literal"&gt;template&lt;/tt&gt; は関数と捉えると良いみたいです.&lt;/div&gt;
&lt;div class="line"&gt;&lt;tt class="docutils literal"&gt;iex &lt;span class="pre"&gt;-S&lt;/span&gt; mix&lt;/tt&gt; で以下のコマンドを入力すると何が起きているかなんとなくわかります.&lt;/div&gt;
&lt;div class="line"&gt;&lt;tt class="docutils literal"&gt;view&lt;/tt&gt; の部分が &lt;tt class="docutils literal"&gt;:safe&lt;/tt&gt; とリストの入れ子のタプルになってて一見わかりにくいですが,リストの部分は単なるタグの入れ子になってるみたいです.&lt;/div&gt;
&lt;div class="line"&gt;素のタグ部分と, &lt;tt class="docutils literal"&gt;&amp;lt;%= %&amp;gt;&lt;/tt&gt; とか &lt;tt class="docutils literal"&gt;&amp;lt;% %&amp;gt;&lt;/tt&gt; の部分とでわけられてるみたいです.&lt;/div&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;1&lt;/span&gt;
&lt;span class="code-line"&gt;2&lt;/span&gt;
&lt;span class="code-line"&gt;3&lt;/span&gt;
&lt;span class="code-line"&gt;4&lt;/span&gt;
&lt;span class="code-line"&gt;5&lt;/span&gt;
&lt;span class="code-line"&gt;6&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;iex&lt;span class="o"&gt;(&lt;/span&gt;1&lt;span class="o"&gt;)&lt;/span&gt;&amp;gt; &lt;span class="nv"&gt;user&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; Rumbl.Repo.get Rumbl.User, &lt;span class="s2"&gt;&amp;quot;1&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;%Rumbl.User&lt;span class="o"&gt;{&lt;/span&gt;id: &lt;span class="s2"&gt;&amp;quot;1&amp;quot;&lt;/span&gt;, name: &lt;span class="s2"&gt;&amp;quot;Jose&amp;quot;&lt;/span&gt;, password: &lt;span class="s2"&gt;&amp;quot;elixir&amp;quot;&lt;/span&gt;, username: &lt;span class="s2"&gt;&amp;quot;josevalim&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;iex&lt;span class="o"&gt;(&lt;/span&gt;2&lt;span class="o"&gt;)&lt;/span&gt;&amp;gt; &lt;span class="nv"&gt;view&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; Rumbl.UserView.render&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;user.html&amp;quot;&lt;/span&gt;, user: user&lt;span class="o"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;{&lt;/span&gt;:safe, &lt;span class="o"&gt;[[[[[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;lt;b&amp;gt;&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Jose&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;lt;/b&amp;gt; (&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;1&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;)\n&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;]}&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;iex&lt;span class="o"&gt;(&lt;/span&gt;3&lt;span class="o"&gt;)&lt;/span&gt;&amp;gt; Phoenix.HTML.safe_to_string&lt;span class="o"&gt;(&lt;/span&gt;view&lt;span class="o"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="s2"&gt;&amp;quot;&amp;lt;b&amp;gt;Jose&amp;lt;/b&amp;gt; (1)\n&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;tt class="docutils literal"&gt;:safe&lt;/tt&gt; はこのHTMLが安全であることを示しています.&lt;/div&gt;
&lt;div class="line"&gt;また、リストになっているのはパフォーマスのためだそうです.&lt;/div&gt;
&lt;div class="line"&gt;ぱっと見どのテンプレートも &lt;tt class="docutils literal"&gt;render&lt;/tt&gt; 関数呼び出しで呼び出されるっぽいですがテンプレート名でパターンマッチが行われることによってレンダリングしてるようです.&lt;/div&gt;
&lt;div class="line"&gt;&lt;tt class="docutils literal"&gt;error&lt;/tt&gt; 見るとよりわかりやすそうです.&lt;/div&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;1&lt;/span&gt;
&lt;span class="code-line"&gt;2&lt;/span&gt;
&lt;span class="code-line"&gt;3&lt;/span&gt;
&lt;span class="code-line"&gt;4&lt;/span&gt;
&lt;span class="code-line"&gt;5&lt;/span&gt;
&lt;span class="code-line"&gt;6&lt;/span&gt;
&lt;span class="code-line"&gt;7&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;def render&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;404.html&amp;quot;&lt;/span&gt;, _assigns&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="s2"&gt;&amp;quot;Page not found&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;end&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;def render&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;500.html&amp;quot;&lt;/span&gt;, _assigns&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="s2"&gt;&amp;quot;Internal server error&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;tt class="docutils literal"&gt;render&lt;/tt&gt; 関数が2つあって第一引数のテンプレート名でパターンマッチしてるのがわかります.&lt;/div&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id1"&gt;
&lt;h3&gt;レンダリングについて&lt;/h3&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;一番初めに &lt;tt class="docutils literal"&gt;templates/layout/app.html.eex&lt;/tt&gt; がレンダリングされて,その後正規のテンプレートがレンダリングされる.&lt;/div&gt;
&lt;div class="line"&gt;まぁRailsとかもおんなじ感じだったと思うのでここらへんは適当にすっ飛ばします.&lt;/div&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;まとめ&lt;/h2&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;ここでChapter3終わるのでちょっと短いですがここまでです.&lt;/div&gt;
&lt;div class="line"&gt;&lt;tt class="docutils literal"&gt;&amp;#64;conn&lt;/tt&gt; みたいな度々出てくる &lt;tt class="docutils literal"&gt;conn&lt;/tt&gt; の正体がまだイマイチ理解しきれてないので具体的にどういうものがどういう流れで入ってきてるのかぼちぼちしらべたいです.&lt;/div&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</summary><category term="Elixir"></category><category term="Phoenix"></category></entry><entry><title>Programming Phoenix勉強その3</title><link href="https://zonuko.github.io/posts/2017/01/04/programming-phoenix3/" rel="alternate"></link><published>2017-01-04T16:08:00+09:00</published><updated>2017-01-04T16:08:00+09:00</updated><author><name>zonuko</name></author><id>tag:zonuko.github.io,2017-01-04:posts/2017/01/04/programming-phoenix3/</id><summary type="html">&lt;div class="line-block"&gt;
&lt;div class="line"&gt;その3です。&lt;/div&gt;
&lt;div class="line"&gt;その2の続きです。&lt;/div&gt;
&lt;div class="line"&gt;今回からChpater3です.&lt;/div&gt;
&lt;div class="line"&gt;このChapterではまず &lt;tt class="docutils literal"&gt;rumbl&lt;/tt&gt; と呼ばれるアプリを作ります.&lt;/div&gt;
&lt;div class="line"&gt;ビデオにたいしてリアルタイムでコメントを付けられるアプリになる予定らしい.&lt;/div&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;準備&lt;/h2&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;Chapter1と同様に以下のコマンドでPhoenixの新しいプロジェクトを作成します.（詳細は割愛）&lt;/div&gt;
&lt;/div&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="code-line"&gt; 1&lt;/span&gt;
&lt;span class="code-line"&gt; 2&lt;/span&gt;
&lt;span class="code-line"&gt; 3&lt;/span&gt;
&lt;span class="code-line"&gt; 4&lt;/span&gt;
&lt;span class="code-line"&gt; 5&lt;/span&gt;
&lt;span class="code-line"&gt; 6&lt;/span&gt;
&lt;span class="code-line"&gt; 7&lt;/span&gt;
&lt;span class="code-line"&gt; 8&lt;/span&gt;
&lt;span class="code-line"&gt; 9&lt;/span&gt;
&lt;span class="code-line"&gt;10&lt;/span&gt;
&lt;span class="code-line"&gt;11&lt;/span&gt;
&lt;span class="code-line"&gt;12&lt;/span&gt;
&lt;span class="code-line"&gt;13&lt;/span&gt;
&lt;span class="code-line"&gt;14&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;$ mix phoenix.new rumbl&lt;/span&gt;
&lt;span class="code-line"&gt;* creating rumbl/ config/ config.exs&lt;/span&gt;
&lt;span class="code-line"&gt;  ...&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;Fetch and install dependencies? &lt;span class="o"&gt;[&lt;/span&gt;Yn&lt;span class="o"&gt;]&lt;/span&gt; y&lt;/span&gt;
&lt;span class="code-line"&gt;* running mix deps.get&lt;/span&gt;
&lt;span class="code-line"&gt;* running npm&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;$ &lt;span class="nb"&gt;cd&lt;/span&gt; rumbl&lt;/span&gt;
&lt;span class="code-line"&gt;rumbl $ mix ecto.create&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;==&lt;/span&gt;&amp;gt; connection&lt;/span&gt;
&lt;span class="code-line"&gt;Compiling &lt;span class="m"&gt;1&lt;/span&gt; file （.ex）&lt;/span&gt;
&lt;span class="code-line"&gt;Generated connection app&lt;/span&gt;
&lt;span class="code-line"&gt;...&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;
&lt;div class="section" id="model"&gt;
&lt;h2&gt;Modelの追加&lt;/h2&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;実際はコマンドで自動生成されるものを手製で実装します.&lt;/div&gt;
&lt;div class="line"&gt;&lt;tt class="docutils literal"&gt;web/models/user.ex&lt;/tt&gt; を以下の内容で実装します.&lt;/div&gt;
&lt;/div&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;1&lt;/span&gt;
&lt;span class="code-line"&gt;2&lt;/span&gt;
&lt;span class="code-line"&gt;3&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kd"&gt;defmodule&lt;/span&gt; &lt;span class="nc"&gt;Rumbl.User&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="kd"&gt;defstruct&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:username&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:password&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="n"&gt;endD&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;div class="line-block"&gt;
&lt;div class="line"&gt;これは &lt;tt class="docutils literal"&gt;id, name, username, password&lt;/tt&gt; 構造体として持つUserモジュールです.&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="repository"&gt;
&lt;h2&gt;Repositoryの変更&lt;/h2&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;現段階では,RepositoryはRDBからではなく独自にハードコーディングします.&lt;/div&gt;
&lt;div class="line"&gt;このようにすることで,データの概念とデータベースの概念が分離されていることがわかります.&lt;/div&gt;
&lt;div class="line"&gt;（ &lt;tt class="docutils literal"&gt;Repo&lt;/tt&gt; と &lt;tt class="docutils literal"&gt;Model&lt;/tt&gt; として）&lt;/div&gt;
&lt;div class="line"&gt;まず, &lt;tt class="docutils literal"&gt;lib/rumbl/repo.ex&lt;/tt&gt; を以下のように変更します.&lt;/div&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="code-line"&gt; 1&lt;/span&gt;
&lt;span class="code-line"&gt; 2&lt;/span&gt;
&lt;span class="code-line"&gt; 3&lt;/span&gt;
&lt;span class="code-line"&gt; 4&lt;/span&gt;
&lt;span class="code-line"&gt; 5&lt;/span&gt;
&lt;span class="code-line"&gt; 6&lt;/span&gt;
&lt;span class="code-line"&gt; 7&lt;/span&gt;
&lt;span class="code-line"&gt; 8&lt;/span&gt;
&lt;span class="code-line"&gt; 9&lt;/span&gt;
&lt;span class="code-line"&gt;10&lt;/span&gt;
&lt;span class="code-line"&gt;11&lt;/span&gt;
&lt;span class="code-line"&gt;12&lt;/span&gt;
&lt;span class="code-line"&gt;13&lt;/span&gt;
&lt;span class="code-line"&gt;14&lt;/span&gt;
&lt;span class="code-line"&gt;15&lt;/span&gt;
&lt;span class="code-line"&gt;16&lt;/span&gt;
&lt;span class="code-line"&gt;17&lt;/span&gt;
&lt;span class="code-line"&gt;18&lt;/span&gt;
&lt;span class="code-line"&gt;19&lt;/span&gt;
&lt;span class="code-line"&gt;20&lt;/span&gt;
&lt;span class="code-line"&gt;21&lt;/span&gt;
&lt;span class="code-line"&gt;22&lt;/span&gt;
&lt;span class="code-line"&gt;23&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kd"&gt;defmodule&lt;/span&gt; &lt;span class="nc"&gt;Rumbl.Repo&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="na"&gt;@moduledoc&lt;/span&gt; &lt;span class="sh"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="sh"&gt;  In memory repository.&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="sh"&gt;  &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="kd"&gt;def&lt;/span&gt; &lt;span class="n"&gt;all&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;Rumbl.User&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="p"&gt;[%&lt;/span&gt;&lt;span class="nc"&gt;Rumbl.User&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="ss"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;1&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Jose&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;username&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;josevalim&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;password&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;elixir&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="p"&gt;%&lt;/span&gt;&lt;span class="nc"&gt;Rumbl.User&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="ss"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;2&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Bruce&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;username&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;redropids&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;password&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;7longs&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="p"&gt;%&lt;/span&gt;&lt;span class="nc"&gt;Rumbl.User&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="ss"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;3&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Chris&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;username&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;chrismccord&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;password&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;phx&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;}]&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="k"&gt;end&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="kd"&gt;def&lt;/span&gt; &lt;span class="n"&gt;all&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;_module&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="ss"&gt;do&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="kd"&gt;def&lt;/span&gt; &lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;module&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="nc"&gt;Enum&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;find&lt;/span&gt; &lt;span class="n"&gt;all&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;module&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="k"&gt;fn&lt;/span&gt; &lt;span class="n"&gt;map&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;map&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;id&lt;/span&gt; &lt;span class="k"&gt;end&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="k"&gt;end&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="kd"&gt;def&lt;/span&gt; &lt;span class="n"&gt;get_by&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;module&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;params&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="nc"&gt;Enum&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;find&lt;/span&gt; &lt;span class="n"&gt;all&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;module&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="k"&gt;fn&lt;/span&gt; &lt;span class="n"&gt;map&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;      &lt;span class="nc"&gt;Enum&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;all?&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;params&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;fn&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;val&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="nc"&gt;Map&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;map&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;val&lt;/span&gt; &lt;span class="k"&gt;end&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="k"&gt;end&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="k"&gt;end&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="k"&gt;end&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;tt class="docutils literal"&gt;Ecto&lt;/tt&gt; を使わないようにしたので, &lt;tt class="docutils literal"&gt;lib/rumbl.ex&lt;/tt&gt; を編集して上記の &lt;tt class="docutils literal"&gt;repo.ex&lt;/tt&gt; をプロセス管理対象から外します.&lt;/div&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;1&lt;/span&gt;
&lt;span class="code-line"&gt;2&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Start the Ecto repository&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;# supervisor(Rumbl.Repo, []), # これをコメントアウト&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;div class="line-block"&gt;
&lt;div class="line"&gt;上手く行っているか試すにはコンソールでプロジェクトフォルダに移動して &lt;tt class="docutils literal"&gt;iex &lt;span class="pre"&gt;-S&lt;/span&gt; mix&lt;/tt&gt; コマンドで &lt;tt class="docutils literal"&gt;iex&lt;/tt&gt; を起動します.&lt;/div&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="code-line"&gt; 1&lt;/span&gt;
&lt;span class="code-line"&gt; 2&lt;/span&gt;
&lt;span class="code-line"&gt; 3&lt;/span&gt;
&lt;span class="code-line"&gt; 4&lt;/span&gt;
&lt;span class="code-line"&gt; 5&lt;/span&gt;
&lt;span class="code-line"&gt; 6&lt;/span&gt;
&lt;span class="code-line"&gt; 7&lt;/span&gt;
&lt;span class="code-line"&gt; 8&lt;/span&gt;
&lt;span class="code-line"&gt; 9&lt;/span&gt;
&lt;span class="code-line"&gt;10&lt;/span&gt;
&lt;span class="code-line"&gt;11&lt;/span&gt;
&lt;span class="code-line"&gt;12&lt;/span&gt;
&lt;span class="code-line"&gt;13&lt;/span&gt;
&lt;span class="code-line"&gt;14&lt;/span&gt;
&lt;span class="code-line"&gt;15&lt;/span&gt;
&lt;span class="code-line"&gt;16&lt;/span&gt;
&lt;span class="code-line"&gt;17&lt;/span&gt;
&lt;span class="code-line"&gt;18&lt;/span&gt;
&lt;span class="code-line"&gt;19&lt;/span&gt;
&lt;span class="code-line"&gt;20&lt;/span&gt;
&lt;span class="code-line"&gt;21&lt;/span&gt;
&lt;span class="code-line"&gt;22&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;rumbl $ iex -S mix&lt;/span&gt;
&lt;span class="code-line"&gt;Erlang/OTP &lt;span class="m"&gt;19&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;erts-8.2&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;source&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;64-bit&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;smp:4:4&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;async-threads:10&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;hipe&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;kernel-poll:false&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;dtrace&lt;span class="o"&gt;]&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;Compiling &lt;span class="m"&gt;7&lt;/span&gt; files &lt;span class="o"&gt;(&lt;/span&gt;.ex&lt;span class="o"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;Interactive Elixir &lt;span class="o"&gt;(&lt;/span&gt;1.3.4&lt;span class="o"&gt;)&lt;/span&gt; - press Ctrl+C to &lt;span class="nb"&gt;exit&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;type&lt;/span&gt; h&lt;span class="o"&gt;()&lt;/span&gt; ENTER &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nb"&gt;help&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;iex&lt;span class="o"&gt;(&lt;/span&gt;1&lt;span class="o"&gt;)&lt;/span&gt;&amp;gt; &lt;span class="nb"&gt;alias&lt;/span&gt; Rumbl.User&lt;/span&gt;
&lt;span class="code-line"&gt;Rumbl.User&lt;/span&gt;
&lt;span class="code-line"&gt;iex&lt;span class="o"&gt;(&lt;/span&gt;2&lt;span class="o"&gt;)&lt;/span&gt;&amp;gt; &lt;span class="nb"&gt;alias&lt;/span&gt; Rumbl.Repo&lt;/span&gt;
&lt;span class="code-line"&gt;Rumbl.Repo&lt;/span&gt;
&lt;span class="code-line"&gt;iex&lt;span class="o"&gt;(&lt;/span&gt;3&lt;span class="o"&gt;)&lt;/span&gt;&amp;gt; Repo.all User&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;%Rumbl.User&lt;span class="o"&gt;{&lt;/span&gt;id: &lt;span class="s2"&gt;&amp;quot;1&amp;quot;&lt;/span&gt;, name: &lt;span class="s2"&gt;&amp;quot;Jose&amp;quot;&lt;/span&gt;, password: &lt;span class="s2"&gt;&amp;quot;elixir&amp;quot;&lt;/span&gt;, username: &lt;span class="s2"&gt;&amp;quot;josevalim&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;,&lt;/span&gt;
&lt;span class="code-line"&gt; %Rumbl.User&lt;span class="o"&gt;{&lt;/span&gt;id: &lt;span class="s2"&gt;&amp;quot;2&amp;quot;&lt;/span&gt;, name: &lt;span class="s2"&gt;&amp;quot;Bruce&amp;quot;&lt;/span&gt;, password: &lt;span class="s2"&gt;&amp;quot;7longs&amp;quot;&lt;/span&gt;, username: &lt;span class="s2"&gt;&amp;quot;redropids&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;,&lt;/span&gt;
&lt;span class="code-line"&gt; %Rumbl.User&lt;span class="o"&gt;{&lt;/span&gt;id: &lt;span class="s2"&gt;&amp;quot;3&amp;quot;&lt;/span&gt;, name: &lt;span class="s2"&gt;&amp;quot;Chris&amp;quot;&lt;/span&gt;, password: &lt;span class="s2"&gt;&amp;quot;phx&amp;quot;&lt;/span&gt;, username: &lt;span class="s2"&gt;&amp;quot;chrismccord&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;}]&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;iex&lt;span class="o"&gt;(&lt;/span&gt;4&lt;span class="o"&gt;)&lt;/span&gt;&amp;gt; Repo.all Rumbl.Other&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;[]&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;iex&lt;span class="o"&gt;(&lt;/span&gt;5&lt;span class="o"&gt;)&lt;/span&gt;&amp;gt; Repo.get User, &lt;span class="s2"&gt;&amp;quot;1&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;%Rumbl.User&lt;span class="o"&gt;{&lt;/span&gt;id: &lt;span class="s2"&gt;&amp;quot;1&amp;quot;&lt;/span&gt;, name: &lt;span class="s2"&gt;&amp;quot;Jose&amp;quot;&lt;/span&gt;, password: &lt;span class="s2"&gt;&amp;quot;elixir&amp;quot;&lt;/span&gt;, username: &lt;span class="s2"&gt;&amp;quot;josevalim&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;iex&lt;span class="o"&gt;(&lt;/span&gt;6&lt;span class="o"&gt;)&lt;/span&gt;&amp;gt; Repo.get_by User, name: &lt;span class="s2"&gt;&amp;quot;Brunce&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;nil&lt;/span&gt;
&lt;span class="code-line"&gt;iex&lt;span class="o"&gt;(&lt;/span&gt;7&lt;span class="o"&gt;)&lt;/span&gt;&amp;gt; Repo.get_by User, name: &lt;span class="s2"&gt;&amp;quot;Bruce&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;%Rumbl.User&lt;span class="o"&gt;{&lt;/span&gt;id: &lt;span class="s2"&gt;&amp;quot;2&amp;quot;&lt;/span&gt;, name: &lt;span class="s2"&gt;&amp;quot;Bruce&amp;quot;&lt;/span&gt;, password: &lt;span class="s2"&gt;&amp;quot;7longs&amp;quot;&lt;/span&gt;, username: &lt;span class="s2"&gt;&amp;quot;redropids&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;iex&lt;span class="o"&gt;(&lt;/span&gt;8&lt;span class="o"&gt;)&lt;/span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;
&lt;div class="section" id="controller"&gt;
&lt;h2&gt;Controllerの実装&lt;/h2&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;上記で作成した &lt;tt class="docutils literal"&gt;Repository&lt;/tt&gt; を扱う &lt;tt class="docutils literal"&gt;Controller&lt;/tt&gt; を実装します.&lt;/div&gt;
&lt;div class="line"&gt;まず,専用のルーティング設定を &lt;tt class="docutils literal"&gt;web/router.ex&lt;/tt&gt; に設定します.&lt;/div&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;1&lt;/span&gt;
&lt;span class="code-line"&gt;2&lt;/span&gt;
&lt;span class="code-line"&gt;3&lt;/span&gt;
&lt;span class="code-line"&gt;4&lt;/span&gt;
&lt;span class="code-line"&gt;5&lt;/span&gt;
&lt;span class="code-line"&gt;6&lt;/span&gt;
&lt;span class="code-line"&gt;7&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;scope&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;/&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nc"&gt;Rumbl&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="n"&gt;pipe_through&lt;/span&gt; &lt;span class="ss"&gt;:browser&lt;/span&gt; &lt;span class="c1"&gt;# Use the default browser stacks.&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="n"&gt;get&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;/users&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nc"&gt;UserController&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:index&lt;/span&gt;     &lt;span class="c1"&gt;# 追加&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="n"&gt;get&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;/users/:id&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nc"&gt;UserController&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:show&lt;/span&gt;  &lt;span class="c1"&gt;# 追加&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="n"&gt;get&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;/&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nc"&gt;PageController&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:index&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="k"&gt;end&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;div class="line-block"&gt;
&lt;div class="line"&gt;みて分かる通り &lt;tt class="docutils literal"&gt;UserControler&lt;/tt&gt; の &lt;tt class="docutils literal"&gt;index&lt;/tt&gt; アクションと &lt;tt class="docutils literal"&gt;show&lt;/tt&gt; アクションに対応するルーティング設定を行います.&lt;/div&gt;
&lt;div class="line"&gt;&lt;tt class="docutils literal"&gt;get&lt;/tt&gt; マクロはHTTPメソッドのGETで呼び出されることを想定されています.&lt;/div&gt;
&lt;div class="line"&gt;次に,設定したルーティングに対応する &lt;tt class="docutils literal"&gt;Controller&lt;/tt&gt; を実装します.&lt;/div&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;1&lt;/span&gt;
&lt;span class="code-line"&gt;2&lt;/span&gt;
&lt;span class="code-line"&gt;3&lt;/span&gt;
&lt;span class="code-line"&gt;4&lt;/span&gt;
&lt;span class="code-line"&gt;5&lt;/span&gt;
&lt;span class="code-line"&gt;6&lt;/span&gt;
&lt;span class="code-line"&gt;7&lt;/span&gt;
&lt;span class="code-line"&gt;8&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kd"&gt;defmodule&lt;/span&gt; &lt;span class="nc"&gt;Rumbl.UserController&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="nc"&gt;Rumbl.Web&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:controller&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="kd"&gt;def&lt;/span&gt; &lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;conn&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;_params&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="n"&gt;users&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;Repo&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;all&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;Rumbl.User&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="n"&gt;render&lt;/span&gt; &lt;span class="n"&gt;conn&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;index.html&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;users&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;users&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="k"&gt;end&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="k"&gt;end&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;tt class="docutils literal"&gt;hello&lt;/tt&gt; アプリで作成したものと対して変わらないと思います.&lt;/div&gt;
&lt;div class="line"&gt;違いは &lt;tt class="docutils literal"&gt;Repo.all/1&lt;/tt&gt; 関数でユーザ一覧を取ってきてることくらいだと思います.&lt;/div&gt;
&lt;div class="line"&gt;この時点でもまだ &lt;tt class="docutils literal"&gt;View&lt;/tt&gt; がないとエラーになるので, &lt;tt class="docutils literal"&gt;View&lt;/tt&gt; の実装をします.&lt;/div&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="view"&gt;
&lt;h2&gt;Viewの実装&lt;/h2&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;tt class="docutils literal"&gt;web/views/user_view.ex&lt;/tt&gt; を以下の内容で実装します.&lt;/div&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="code-line"&gt; 1&lt;/span&gt;
&lt;span class="code-line"&gt; 2&lt;/span&gt;
&lt;span class="code-line"&gt; 3&lt;/span&gt;
&lt;span class="code-line"&gt; 4&lt;/span&gt;
&lt;span class="code-line"&gt; 5&lt;/span&gt;
&lt;span class="code-line"&gt; 6&lt;/span&gt;
&lt;span class="code-line"&gt; 7&lt;/span&gt;
&lt;span class="code-line"&gt; 8&lt;/span&gt;
&lt;span class="code-line"&gt; 9&lt;/span&gt;
&lt;span class="code-line"&gt;10&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kd"&gt;defmodule&lt;/span&gt; &lt;span class="nc"&gt;Rumbl.UserView&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="nc"&gt;Rumbl.Web&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:view&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="kn"&gt;alias&lt;/span&gt; &lt;span class="nc"&gt;Rumbl.User&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="kd"&gt;def&lt;/span&gt; &lt;span class="n"&gt;first_name&lt;/span&gt;&lt;span class="p"&gt;(%&lt;/span&gt;&lt;span class="nc"&gt;User&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="ss"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="n"&gt;name&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="o"&gt;|&amp;gt;&lt;/span&gt; &lt;span class="nc"&gt;String&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot; &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="o"&gt;|&amp;gt;&lt;/span&gt; &lt;span class="nc"&gt;Enum&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;at&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="k"&gt;end&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="k"&gt;end&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;div class="line-block"&gt;
&lt;div class="line"&gt;単純に名前を名字と名前で分解しているだけの関数です.&lt;/div&gt;
&lt;div class="line"&gt;&lt;tt class="docutils literal"&gt;View&lt;/tt&gt; モジュール名は &lt;tt class="docutils literal"&gt;Controller&lt;/tt&gt; 名から自動で推測されます.&lt;/div&gt;
&lt;div class="line"&gt;（ &lt;tt class="docutils literal"&gt;UserController&lt;/tt&gt; なら &lt;tt class="docutils literal"&gt;UserView&lt;/tt&gt; といった具合）&lt;/div&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="template"&gt;
&lt;h2&gt;Templateの実装&lt;/h2&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;tt class="docutils literal"&gt;web/templates/user/index.html.eex&lt;/tt&gt; を以下の内容で実装します.&lt;/div&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="code-line"&gt; 1&lt;/span&gt;
&lt;span class="code-line"&gt; 2&lt;/span&gt;
&lt;span class="code-line"&gt; 3&lt;/span&gt;
&lt;span class="code-line"&gt; 4&lt;/span&gt;
&lt;span class="code-line"&gt; 5&lt;/span&gt;
&lt;span class="code-line"&gt; 6&lt;/span&gt;
&lt;span class="code-line"&gt; 7&lt;/span&gt;
&lt;span class="code-line"&gt; 8&lt;/span&gt;
&lt;span class="code-line"&gt; 9&lt;/span&gt;
&lt;span class="code-line"&gt;10&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="x"&gt;&amp;lt;h1&amp;gt;Listing Users&amp;lt;/h1&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="x"&gt;&amp;lt;table class=&amp;quot;table&amp;quot;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="x"&gt;  &lt;/span&gt;&lt;span class="cp"&gt;&amp;lt;%=&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;user&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="vi"&gt;@users&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="cp"&gt;%&amp;gt;&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="x"&gt;    &amp;lt;tr&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="x"&gt;      &amp;lt;td&amp;gt;&amp;lt;b&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&amp;lt;%=&lt;/span&gt; &lt;span class="n"&gt;first_name&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="cp"&gt;%&amp;gt;&lt;/span&gt;&lt;span class="x"&gt;&amp;lt;/b&amp;gt; (&lt;/span&gt;&lt;span class="cp"&gt;&amp;lt;%=&lt;/span&gt; &lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt; &lt;span class="cp"&gt;%&amp;gt;&lt;/span&gt;&lt;span class="x"&gt;)&amp;lt;/td&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="x"&gt;      &amp;lt;td&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&amp;lt;%=&lt;/span&gt; &lt;span class="n"&gt;link&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;View&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;to&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;user_path&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="vi"&gt;@conn&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:show&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="cp"&gt;%&amp;gt;&lt;/span&gt;&lt;span class="x"&gt;&amp;lt;/td&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="x"&gt;    &amp;lt;/tr&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="x"&gt;  &lt;/span&gt;&lt;span class="cp"&gt;&amp;lt;%&lt;/span&gt; &lt;span class="k"&gt;end&lt;/span&gt; &lt;span class="cp"&gt;%&amp;gt;&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="x"&gt;&amp;lt;/table&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;tt class="docutils literal"&gt;Template&lt;/tt&gt; は &lt;tt class="docutils literal"&gt;View&lt;/tt&gt; 名から自動で推測されます.&lt;/div&gt;
&lt;div class="line"&gt;（ &lt;tt class="docutils literal"&gt;UserView&lt;/tt&gt; なら &lt;tt class="docutils literal"&gt;user&lt;/tt&gt; フォルダといった具合）&lt;/div&gt;
&lt;div class="line"&gt;ここまでくれば &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;http://localhost:4000/users&lt;/span&gt;&lt;/tt&gt; でユーザ一覧が表示されます.&lt;/div&gt;
&lt;div class="line"&gt;&lt;tt class="docutils literal"&gt;EEx&lt;/tt&gt; のハイライトないので　 &lt;tt class="docutils literal"&gt;ERB&lt;/tt&gt; でハイライトしてます.&lt;/div&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="viewuse-rumbl-web-view"&gt;
&lt;h2&gt;Viewのuse Rumbl.Web, :viewについて&lt;/h2&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;tt class="docutils literal"&gt;view&lt;/tt&gt; に記述した &lt;tt class="docutils literal"&gt;use Rumbl.Web, :view&lt;/tt&gt; の実体は &lt;tt class="docutils literal"&gt;web/web.ex&lt;/tt&gt; に存在します.&lt;/div&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="code-line"&gt; 1&lt;/span&gt;
&lt;span class="code-line"&gt; 2&lt;/span&gt;
&lt;span class="code-line"&gt; 3&lt;/span&gt;
&lt;span class="code-line"&gt; 4&lt;/span&gt;
&lt;span class="code-line"&gt; 5&lt;/span&gt;
&lt;span class="code-line"&gt; 6&lt;/span&gt;
&lt;span class="code-line"&gt; 7&lt;/span&gt;
&lt;span class="code-line"&gt; 8&lt;/span&gt;
&lt;span class="code-line"&gt; 9&lt;/span&gt;
&lt;span class="code-line"&gt;10&lt;/span&gt;
&lt;span class="code-line"&gt;11&lt;/span&gt;
&lt;span class="code-line"&gt;12&lt;/span&gt;
&lt;span class="code-line"&gt;13&lt;/span&gt;
&lt;span class="code-line"&gt;14&lt;/span&gt;
&lt;span class="code-line"&gt;15&lt;/span&gt;
&lt;span class="code-line"&gt;16&lt;/span&gt;
&lt;span class="code-line"&gt;17&lt;/span&gt;
&lt;span class="code-line"&gt;18&lt;/span&gt;
&lt;span class="code-line"&gt;19&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kd"&gt;defmodule&lt;/span&gt; &lt;span class="nc"&gt;Rumbl.Web&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="err"&gt;…&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="kd"&gt;def&lt;/span&gt; &lt;span class="n"&gt;view&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="k"&gt;quote&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;      &lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="nc"&gt;Phoenix.View&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;root&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;web/templates&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;      &lt;span class="c1"&gt;# Import convenience functions from controllers&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;      &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nc"&gt;Phoenix.Controller&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;only&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;get_csrf_token&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;get_flash&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;view_module&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;      &lt;span class="c1"&gt;# Use all HTML functionality (forms, tags, etc)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;      &lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="nc"&gt;Phoenix.HTML&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;      &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nc"&gt;Rumbl.Router.Helpers&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;      &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nc"&gt;Rumbl.ErrorHelpers&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;      &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nc"&gt;Rumbl.Gettext&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="k"&gt;end&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="k"&gt;end&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="err"&gt;…&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="k"&gt;end&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;tt class="docutils literal"&gt;Phoenix.HTML&lt;/tt&gt; をHTML周りのことを色々やってくれているようです.&lt;/div&gt;
&lt;div class="line"&gt;また,これによって生成されるHTMLは安全で,XSS対策なども行ってくれているようです.&lt;/div&gt;
&lt;div class="line"&gt;ここには勝手に関数を書くのはNG.書きたいなら真似して &lt;tt class="docutils literal"&gt;import&lt;/tt&gt; を使うこと.&lt;/div&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;まとめ&lt;/h2&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;今回は前回より具体的に各機能を実装しました.&lt;/div&gt;
&lt;div class="line"&gt;個人的には今までよくわからなかった &lt;tt class="docutils literal"&gt;Repository&lt;/tt&gt; と &lt;tt class="docutils literal"&gt;Model&lt;/tt&gt; の関係がちょっとわかったのが収穫でした.&lt;/div&gt;
&lt;div class="line"&gt;他のフレームワーク触ってると, &lt;tt class="docutils literal"&gt;View&lt;/tt&gt; と &lt;tt class="docutils literal"&gt;Template&lt;/tt&gt; が分離しているのが一瞬戸惑いそうだとおもいました.&lt;/div&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</summary><category term="Elixir"></category><category term="Phoenix"></category></entry><entry><title>Programming Phoenix勉強その2</title><link href="https://zonuko.github.io/posts/2016/12/31/programming-phoenix2/" rel="alternate"></link><published>2016-12-31T00:50:00+09:00</published><updated>2016-12-31T00:50:00+09:00</updated><author><name>zonuko</name></author><id>tag:zonuko.github.io,2016-12-31:posts/2016/12/31/programming-phoenix2/</id><summary type="html">&lt;div class="line-block"&gt;
&lt;div class="line"&gt;その2です。&lt;/div&gt;
&lt;div class="line"&gt;その1の続きです。&lt;/div&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;デフォルトのディレクトリ構成について&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;config&lt;/tt&gt; ディレクトリ&lt;ul&gt;
&lt;li&gt;Phoenixの設定ファイル置き場.名前のまま.&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;prod.secret.exs&lt;/tt&gt; は秘密情報が入っているファイルなので,VCSからは外すこと.&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;config.exs&lt;/tt&gt; の &lt;tt class="docutils literal"&gt;endpoint&lt;/tt&gt; はWebサーバーとアプリケーションの接続の境界部分.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;lib&lt;/tt&gt; ディレクトリ&lt;ul&gt;
&lt;li&gt;Supervision treeと,長く起動するプロセスが置かれる.（?,あってるか微妙）&lt;/li&gt;
&lt;li&gt;DBとのコネクションプールとかのような長く使われるものが置かれるっぽい.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;test&lt;/tt&gt; ディレクトリ&lt;ul&gt;
&lt;li&gt;名前の通りテストが置かれる.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;web&lt;/tt&gt; ディレクトリ&lt;ul&gt;
&lt;li&gt;Webアプリに必要な &lt;tt class="docutils literal"&gt;model&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;view&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;template&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;controller&lt;/tt&gt; が置かれる.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="plug"&gt;
&lt;h2&gt;Plugについて&lt;/h2&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;tt class="docutils literal"&gt;Plug&lt;/tt&gt; ライブラリは接続の統一化のために使われる.&lt;/div&gt;
&lt;div class="line"&gt;&lt;tt class="docutils literal"&gt;Plug&lt;/tt&gt; のリポジトリ &lt;a class="citation-reference" href="#id5" id="id2"&gt;[Plugリポジトリ]&lt;/a&gt; には以下のように書いてある.&lt;/div&gt;
&lt;/div&gt;
&lt;pre class="literal-block"&gt;
・ A specification for composable modules between web applications
・ Connection adapters for different web servers in the Erlang VM
&lt;/pre&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;なので,各機能のモジュールの仕様の記述と,Erlang VMと各Webサーバーとの接続をやってくれるみたいです.&lt;/div&gt;
&lt;div class="line"&gt;（あまり理解してない感が）&lt;/div&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div class="line"&gt;実際にPhoenixが作ってくれる物を見てみます. &lt;tt class="docutils literal"&gt;config/endpoint.exs&lt;/tt&gt; を見てみます.&lt;/div&gt;
&lt;/div&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="code-line"&gt; 1&lt;/span&gt;
&lt;span class="code-line"&gt; 2&lt;/span&gt;
&lt;span class="code-line"&gt; 3&lt;/span&gt;
&lt;span class="code-line"&gt; 4&lt;/span&gt;
&lt;span class="code-line"&gt; 5&lt;/span&gt;
&lt;span class="code-line"&gt; 6&lt;/span&gt;
&lt;span class="code-line"&gt; 7&lt;/span&gt;
&lt;span class="code-line"&gt; 8&lt;/span&gt;
&lt;span class="code-line"&gt; 9&lt;/span&gt;
&lt;span class="code-line"&gt;10&lt;/span&gt;
&lt;span class="code-line"&gt;11&lt;/span&gt;
&lt;span class="code-line"&gt;12&lt;/span&gt;
&lt;span class="code-line"&gt;13&lt;/span&gt;
&lt;span class="code-line"&gt;14&lt;/span&gt;
&lt;span class="code-line"&gt;15&lt;/span&gt;
&lt;span class="code-line"&gt;16&lt;/span&gt;
&lt;span class="code-line"&gt;17&lt;/span&gt;
&lt;span class="code-line"&gt;18&lt;/span&gt;
&lt;span class="code-line"&gt;19&lt;/span&gt;
&lt;span class="code-line"&gt;20&lt;/span&gt;
&lt;span class="code-line"&gt;21&lt;/span&gt;
&lt;span class="code-line"&gt;22&lt;/span&gt;
&lt;span class="code-line"&gt;23&lt;/span&gt;
&lt;span class="code-line"&gt;24&lt;/span&gt;
&lt;span class="code-line"&gt;25&lt;/span&gt;
&lt;span class="code-line"&gt;26&lt;/span&gt;
&lt;span class="code-line"&gt;27&lt;/span&gt;
&lt;span class="code-line"&gt;28&lt;/span&gt;
&lt;span class="code-line"&gt;29&lt;/span&gt;
&lt;span class="code-line"&gt;30&lt;/span&gt;
&lt;span class="code-line"&gt;31&lt;/span&gt;
&lt;span class="code-line"&gt;32&lt;/span&gt;
&lt;span class="code-line"&gt;33&lt;/span&gt;
&lt;span class="code-line"&gt;34&lt;/span&gt;
&lt;span class="code-line"&gt;35&lt;/span&gt;
&lt;span class="code-line"&gt;36&lt;/span&gt;
&lt;span class="code-line"&gt;37&lt;/span&gt;
&lt;span class="code-line"&gt;38&lt;/span&gt;
&lt;span class="code-line"&gt;39&lt;/span&gt;
&lt;span class="code-line"&gt;40&lt;/span&gt;
&lt;span class="code-line"&gt;41&lt;/span&gt;
&lt;span class="code-line"&gt;42&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kd"&gt;defmodule&lt;/span&gt; &lt;span class="nc"&gt;Hello.Endpoint&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="nc"&gt;Phoenix.Endpoint&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;otp_app&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="ss"&gt;:hello&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="n"&gt;socket&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;/socket&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nc"&gt;Hello.UserSocket&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="c1"&gt;# Serve at &amp;quot;/&amp;quot; the static files from &amp;quot;priv/static&amp;quot; directory.&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="c1"&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="c1"&gt;# You should set gzip to true if you are running phoenix.digest&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="c1"&gt;# when deploying your static files in production.&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="n"&gt;plug&lt;/span&gt; &lt;span class="nc"&gt;Plug.Static&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="ss"&gt;at&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;/&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;from&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="ss"&gt;:hello&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;gzip&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="ss"&gt;only&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="sx"&gt;~w(css fonts images js favicon.ico robots.txt)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="c1"&gt;# Code reloading can be explicitly enabled under the&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="c1"&gt;# :code_reloader configuration of your endpoint.&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;code_reloading?&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="n"&gt;socket&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;/phoenix/live_reload/socket&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nc"&gt;Phoenix.LiveReloader.Socket&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="n"&gt;plug&lt;/span&gt; &lt;span class="nc"&gt;Phoenix.LiveReloader&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="n"&gt;plug&lt;/span&gt; &lt;span class="nc"&gt;Phoenix.CodeReloader&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="k"&gt;end&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="n"&gt;plug&lt;/span&gt; &lt;span class="nc"&gt;Plug.RequestId&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="n"&gt;plug&lt;/span&gt; &lt;span class="nc"&gt;Plug.Logger&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="n"&gt;plug&lt;/span&gt; &lt;span class="nc"&gt;Plug.Parsers&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="ss"&gt;parsers&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:urlencoded&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:multipart&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:json&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="ss"&gt;pass&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;*/*&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="ss"&gt;json_decoder&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nc"&gt;Poison&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="n"&gt;plug&lt;/span&gt; &lt;span class="nc"&gt;Plug.MethodOverride&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="n"&gt;plug&lt;/span&gt; &lt;span class="nc"&gt;Plug.Head&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="c1"&gt;# The session will be stored in the cookie and signed,&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="c1"&gt;# this means its contents can be read but not tampered with.&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="c1"&gt;# Set :encryption_salt if you would also like to encrypt it.&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="n"&gt;plug&lt;/span&gt; &lt;span class="nc"&gt;Plug.Session&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="ss"&gt;store&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="ss"&gt;:cookie&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="ss"&gt;key&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;_hello_key&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="ss"&gt;signing_salt&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;zzWE+Yw+&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="n"&gt;plug&lt;/span&gt; &lt;span class="nc"&gt;Hello.Router&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="k"&gt;end&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;div class="line-block"&gt;
&lt;div class="line"&gt;とりあえず &lt;tt class="docutils literal"&gt;plug&lt;/tt&gt; ってのがいっぱい出てきています.&lt;/div&gt;
&lt;div class="line"&gt;なんとなく見てると, &lt;tt class="docutils literal"&gt;plug Plug.Static&lt;/tt&gt; で静的ファイルについての設定っぽいものが書いてあったり,&lt;/div&gt;
&lt;div class="line"&gt;&lt;tt class="docutils literal"&gt;plug Plug.Logger&lt;/tt&gt; とか, &lt;tt class="docutils literal"&gt;plug Plug.Parsers&lt;/tt&gt; とかあったりして,Webアプリに必要な設定が書いてあるっぽいなと言う感覚です.&lt;/div&gt;
&lt;div class="line"&gt;ココらへんの一連の &lt;tt class="docutils literal"&gt;plug&lt;/tt&gt; は関数のパイプラインとして処理されるようです.&lt;/div&gt;
&lt;/div&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;1&lt;/span&gt;
&lt;span class="code-line"&gt;2&lt;/span&gt;
&lt;span class="code-line"&gt;3&lt;/span&gt;
&lt;span class="code-line"&gt;4&lt;/span&gt;
&lt;span class="code-line"&gt;5&lt;/span&gt;
&lt;span class="code-line"&gt;6&lt;/span&gt;
&lt;span class="code-line"&gt;7&lt;/span&gt;
&lt;span class="code-line"&gt;8&lt;/span&gt;
&lt;span class="code-line"&gt;9&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;connection&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;|&amp;gt;&lt;/span&gt; &lt;span class="nc"&gt;Plug.Static&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;call&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;|&amp;gt;&lt;/span&gt; &lt;span class="nc"&gt;Plug.RequestId&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;call&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;|&amp;gt;&lt;/span&gt; &lt;span class="nc"&gt;Plug.Logger&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;call&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;|&amp;gt;&lt;/span&gt; &lt;span class="nc"&gt;Plug.Parsers&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;call&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;|&amp;gt;&lt;/span&gt; &lt;span class="nc"&gt;Plug.MethodOverride&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;call&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;|&amp;gt;&lt;/span&gt; &lt;span class="nc"&gt;Plug.Head&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;call&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;|&amp;gt;&lt;/span&gt; &lt;span class="nc"&gt;Plug.Session&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;call&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;|&amp;gt;&lt;/span&gt; &lt;span class="nc"&gt;Hello.Router&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;call&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;div class="line-block"&gt;
&lt;div class="line"&gt;ソースに書いた順になってるっぽいです.Servletの設定順ミスってハマった思い出が…&lt;/div&gt;
&lt;div class="line"&gt;ちなみに &lt;tt class="docutils literal"&gt;endpoint&lt;/tt&gt; 自体も &lt;tt class="docutils literal"&gt;plug&lt;/tt&gt; で,アプリケーション自体は &lt;tt class="docutils literal"&gt;endpoint&lt;/tt&gt; で始まり &lt;tt class="docutils literal"&gt;controller&lt;/tt&gt; で終わる一連のパイプラインらしい.&lt;/div&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="router"&gt;
&lt;h2&gt;Routerについて&lt;/h2&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;tt class="docutils literal"&gt;web/router.ex&lt;/tt&gt; のソースを見ると,2つのパイプラインがあることがわかる.&lt;/div&gt;
&lt;/div&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="code-line"&gt; 1&lt;/span&gt;
&lt;span class="code-line"&gt; 2&lt;/span&gt;
&lt;span class="code-line"&gt; 3&lt;/span&gt;
&lt;span class="code-line"&gt; 4&lt;/span&gt;
&lt;span class="code-line"&gt; 5&lt;/span&gt;
&lt;span class="code-line"&gt; 6&lt;/span&gt;
&lt;span class="code-line"&gt; 7&lt;/span&gt;
&lt;span class="code-line"&gt; 8&lt;/span&gt;
&lt;span class="code-line"&gt; 9&lt;/span&gt;
&lt;span class="code-line"&gt;10&lt;/span&gt;
&lt;span class="code-line"&gt;11&lt;/span&gt;
&lt;span class="code-line"&gt;12&lt;/span&gt;
&lt;span class="code-line"&gt;13&lt;/span&gt;
&lt;span class="code-line"&gt;14&lt;/span&gt;
&lt;span class="code-line"&gt;15&lt;/span&gt;
&lt;span class="code-line"&gt;16&lt;/span&gt;
&lt;span class="code-line"&gt;17&lt;/span&gt;
&lt;span class="code-line"&gt;18&lt;/span&gt;
&lt;span class="code-line"&gt;19&lt;/span&gt;
&lt;span class="code-line"&gt;20&lt;/span&gt;
&lt;span class="code-line"&gt;21&lt;/span&gt;
&lt;span class="code-line"&gt;22&lt;/span&gt;
&lt;span class="code-line"&gt;23&lt;/span&gt;
&lt;span class="code-line"&gt;24&lt;/span&gt;
&lt;span class="code-line"&gt;25&lt;/span&gt;
&lt;span class="code-line"&gt;26&lt;/span&gt;
&lt;span class="code-line"&gt;27&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kd"&gt;defmodule&lt;/span&gt; &lt;span class="nc"&gt;Hello.Router&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="nc"&gt;Hello.Web&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:router&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="n"&gt;pipeline&lt;/span&gt; &lt;span class="ss"&gt;:browser&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="n"&gt;plug&lt;/span&gt; &lt;span class="ss"&gt;:accepts&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;html&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="n"&gt;plug&lt;/span&gt; &lt;span class="ss"&gt;:fetch_session&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="n"&gt;plug&lt;/span&gt; &lt;span class="ss"&gt;:fetch_flash&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="n"&gt;plug&lt;/span&gt; &lt;span class="ss"&gt;:protect_from_forgery&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="n"&gt;plug&lt;/span&gt; &lt;span class="ss"&gt;:put_secure_browser_headers&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="k"&gt;end&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="n"&gt;pipeline&lt;/span&gt; &lt;span class="ss"&gt;:api&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="n"&gt;plug&lt;/span&gt; &lt;span class="ss"&gt;:accepts&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;json&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="k"&gt;end&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="n"&gt;scope&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;/&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nc"&gt;Hello&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="n"&gt;pipe_through&lt;/span&gt; &lt;span class="ss"&gt;:browser&lt;/span&gt; &lt;span class="c1"&gt;# Use the default browser stack&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="n"&gt;get&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;/hello/:name&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nc"&gt;HelloController&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:world&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="n"&gt;get&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;/&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nc"&gt;PageController&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:index&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="k"&gt;end&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="c1"&gt;# Other scopes may use custom stacks.&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="c1"&gt;# scope &amp;quot;/api&amp;quot;, Hello do&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="c1"&gt;#   pipe_through :api&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="c1"&gt;# end&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="k"&gt;end&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;ul class="simple"&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;browser&lt;/tt&gt; パイプライン&lt;ul&gt;
&lt;li&gt;HTMLのみを受け付ける.&lt;/li&gt;
&lt;li&gt;セッション管理とか,フラッシュメッセージとか,セキュリティ対策とかを提供してくれるらしい.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;api&lt;/tt&gt; パイプライン&lt;ul&gt;
&lt;li&gt;基本的なJSON API用のパイプライン.JSONのみ受け付ける.&lt;/li&gt;
&lt;li&gt;XMLにしたいときとかはここ一箇所変更すれば全部変更される.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;tt class="docutils literal"&gt;pipe_through&lt;/tt&gt; でどのパイプラインを使うか書く.&lt;/div&gt;
&lt;div class="line"&gt;処理の流れとしては接続を取得→パイプラインを呼び出し→コントローラーを呼び出し.&lt;/div&gt;
&lt;div class="line"&gt;呼び出し順を纏めると以下になる.&lt;/div&gt;
&lt;/div&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;1&lt;/span&gt;
&lt;span class="code-line"&gt;2&lt;/span&gt;
&lt;span class="code-line"&gt;3&lt;/span&gt;
&lt;span class="code-line"&gt;4&lt;/span&gt;
&lt;span class="code-line"&gt;5&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;connection&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;|&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;endpoint&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;|&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;router&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;|&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;pipeline&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;|&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;controller&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;
&lt;div class="section" id="id3"&gt;
&lt;h2&gt;まとめ&lt;/h2&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;今回は,内部的な処理の流れとかおまじない的な部分が何をしてるかの勉強だった感じです.&lt;/div&gt;
&lt;div class="line"&gt;英語がヘタレ過ぎて自分が理解している意味とあってるか若干の不安が...&lt;/div&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id4"&gt;
&lt;h3&gt;リンク&lt;/h3&gt;
&lt;table class="docutils citation" frame="void" id="id5" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label" /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#id2"&gt;[Plugリポジトリ]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;a class="reference external" href="https://github.com/elixir-lang/plug"&gt;https://github.com/elixir-lang/plug&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
</summary><category term="Elixir"></category><category term="Phoenix"></category></entry><entry><title>Programming Phoenix勉強その1</title><link href="https://zonuko.github.io/posts/2016/12/28/programming-phoenix1/" rel="alternate"></link><published>2016-12-28T21:50:00+09:00</published><updated>2016-12-28T21:50:00+09:00</updated><author><name>zonuko</name></author><id>tag:zonuko.github.io,2016-12-28:posts/2016/12/28/programming-phoenix1/</id><summary type="html">&lt;div class="line-block"&gt;
&lt;div class="line"&gt;買ってあったけど読んでなかったので読みます.プログラミングElixirは原著の方も翻訳の方も一応読んでます.&lt;/div&gt;
&lt;div class="line"&gt;プログラミングElixirについては色々なところで書評なり見る気がするけど,こっちの方は余り見ない気がします.&lt;/div&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div class="line"&gt;ちなみに実際にコードを書くPart1のChapter2からやってきます.&lt;/div&gt;
&lt;div class="line"&gt;あとPhoenix自体は何回か触ってます.趣味で.&lt;/div&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;前提&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;PostgreSQL9.5&lt;/li&gt;
&lt;li&gt;Elixir 1.3.2&lt;/li&gt;
&lt;li&gt;Phoenix Framework1.2.1&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;本より新し目のバージョンにしてるので,色々問題ありそうですが頑張る感じで行きます.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;初期構築&lt;/h2&gt;
&lt;p&gt;プロジェクトテンプレートの生成としてはじめに以下のコマンドを入力します.&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;1&lt;/span&gt;
&lt;span class="code-line"&gt;2&lt;/span&gt;
&lt;span class="code-line"&gt;3&lt;/span&gt;
&lt;span class="code-line"&gt;4&lt;/span&gt;
&lt;span class="code-line"&gt;5&lt;/span&gt;
&lt;span class="code-line"&gt;6&lt;/span&gt;
&lt;span class="code-line"&gt;7&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;$ mix phoenix.new hello&lt;/span&gt;
&lt;span class="code-line"&gt;* creating hello/ config/ config.exs&lt;/span&gt;
&lt;span class="code-line"&gt;  ...&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;Fetch and install dependencies? &lt;span class="o"&gt;[&lt;/span&gt;Yn&lt;span class="o"&gt;]&lt;/span&gt; y&lt;/span&gt;
&lt;span class="code-line"&gt;* running mix deps.get&lt;/span&gt;
&lt;span class="code-line"&gt;* running npm&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;div class="line-block"&gt;
&lt;div class="line"&gt;これでカレントディレクトリにhelloってフォルダが掘られて,色々勝手に整備してくれる.&lt;/div&gt;
&lt;div class="line"&gt;次に以下のコマンドでDB作ったりします.&lt;/div&gt;
&lt;/div&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;1&lt;/span&gt;
&lt;span class="code-line"&gt;2&lt;/span&gt;
&lt;span class="code-line"&gt;3&lt;/span&gt;
&lt;span class="code-line"&gt;4&lt;/span&gt;
&lt;span class="code-line"&gt;5&lt;/span&gt;
&lt;span class="code-line"&gt;6&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;$ &lt;span class="nb"&gt;cd&lt;/span&gt; hello&lt;/span&gt;
&lt;span class="code-line"&gt;hello $ mix ecto.create&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;==&lt;/span&gt;&amp;gt; connection&lt;/span&gt;
&lt;span class="code-line"&gt;Compiling &lt;span class="m"&gt;1&lt;/span&gt; file （.ex）&lt;/span&gt;
&lt;span class="code-line"&gt;Generated connection app&lt;/span&gt;
&lt;span class="code-line"&gt;...&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;div class="line-block"&gt;
&lt;div class="line"&gt;これで &lt;tt class="docutils literal"&gt;hello_dev&lt;/tt&gt; とか言うデータベースができていればOKです.&lt;/div&gt;
&lt;div class="line"&gt;出来てなければ, &lt;tt class="docutils literal"&gt;config/dev.exs&lt;/tt&gt; ってファイルにDBとの接続設定があるので見直します.&lt;/div&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id3"&gt;
&lt;h2&gt;起動&lt;/h2&gt;
&lt;p&gt;以下のコマンドでサーバー起動.&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;1&lt;/span&gt;
&lt;span class="code-line"&gt;2&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;$ &lt;span class="nb"&gt;cd&lt;/span&gt; hello&lt;/span&gt;
&lt;span class="code-line"&gt;$ mix phoenix.server&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;tt class="docutils literal"&gt;mix phoenix.server&lt;/tt&gt; の部分は &lt;tt class="docutils literal"&gt;iex &lt;span class="pre"&gt;-S&lt;/span&gt; mix phoenix.server&lt;/tt&gt; でもOK.こちらはIEXの内部でサーバーが起動する.&lt;/div&gt;
&lt;div class="line"&gt;ちなみにデフォルトでは &lt;tt class="docutils literal"&gt;localhost:4000&lt;/tt&gt; で起動する.&lt;/div&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id4"&gt;
&lt;h2&gt;ルーティング&lt;/h2&gt;
&lt;p&gt;特定のURLとのルーティングを行うには, &lt;tt class="docutils literal"&gt;web/router.exs&lt;/tt&gt; に設定を書く.&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="code-line"&gt; 1&lt;/span&gt;
&lt;span class="code-line"&gt; 2&lt;/span&gt;
&lt;span class="code-line"&gt; 3&lt;/span&gt;
&lt;span class="code-line"&gt; 4&lt;/span&gt;
&lt;span class="code-line"&gt; 5&lt;/span&gt;
&lt;span class="code-line"&gt; 6&lt;/span&gt;
&lt;span class="code-line"&gt; 7&lt;/span&gt;
&lt;span class="code-line"&gt; 8&lt;/span&gt;
&lt;span class="code-line"&gt; 9&lt;/span&gt;
&lt;span class="code-line"&gt;10&lt;/span&gt;
&lt;span class="code-line"&gt;11&lt;/span&gt;
&lt;span class="code-line"&gt;12&lt;/span&gt;
&lt;span class="code-line"&gt;13&lt;/span&gt;
&lt;span class="code-line"&gt;14&lt;/span&gt;
&lt;span class="code-line"&gt;15&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kd"&gt;defmodule&lt;/span&gt; &lt;span class="nc"&gt;Hello.Router&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="c1"&gt;# 省略&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="n"&gt;scope&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;/&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nc"&gt;Hello&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="n"&gt;pipe_through&lt;/span&gt; &lt;span class="ss"&gt;:browser&lt;/span&gt; &lt;span class="c1"&gt;# Use the default browser stack&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="n"&gt;get&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;/hello&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nc"&gt;HelloController&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:world&lt;/span&gt;  &lt;span class="c1"&gt;# 追加&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="n"&gt;get&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;/&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nc"&gt;PageController&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:index&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="k"&gt;end&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="c1"&gt;# Other scopes may use custom stacks.&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="c1"&gt;# scope &amp;quot;/api&amp;quot;, Hello do&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="c1"&gt;#   pipe_through :api&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="c1"&gt;# end&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="k"&gt;end&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;div class="line-block"&gt;
&lt;div class="line"&gt;見ればなんとなくわかると思いますが, &lt;tt class="docutils literal"&gt;get&lt;/tt&gt; マクロに対して色々ルーティングの設定をします.&lt;/div&gt;
&lt;div class="line"&gt;この場合は &lt;tt class="docutils literal"&gt;/hello&lt;/tt&gt; にアクセスが来たら &lt;tt class="docutils literal"&gt;HelloController&lt;/tt&gt; （モジュール）の &lt;tt class="docutils literal"&gt;:world&lt;/tt&gt; アクション（関数）を呼び出すようにしてます.&lt;/div&gt;
&lt;div class="line"&gt;ただ,この段階だと &lt;tt class="docutils literal"&gt;HelloController&lt;/tt&gt; がないのでアクセスしてもエラー画面です.&lt;/div&gt;
&lt;div class="line"&gt;エラー画面が若干本と違ってたので貼っておきます.&lt;/div&gt;
&lt;/div&gt;
&lt;img alt="Quicksilver" src="/images/Phoenix_error.jpg" /&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="controller"&gt;
&lt;h3&gt;Controller実装&lt;/h3&gt;
&lt;p&gt;エラーを解消するために &lt;tt class="docutils literal"&gt;web/controllers/hello_controller.ex&lt;/tt&gt; を以下の内容で作ります.&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;1&lt;/span&gt;
&lt;span class="code-line"&gt;2&lt;/span&gt;
&lt;span class="code-line"&gt;3&lt;/span&gt;
&lt;span class="code-line"&gt;4&lt;/span&gt;
&lt;span class="code-line"&gt;5&lt;/span&gt;
&lt;span class="code-line"&gt;6&lt;/span&gt;
&lt;span class="code-line"&gt;7&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kd"&gt;defmodule&lt;/span&gt; &lt;span class="nc"&gt;Hello.HelloController&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="nc"&gt;Hello.Web&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:controller&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="kd"&gt;def&lt;/span&gt; &lt;span class="n"&gt;world&lt;/span&gt;&lt;span class="err"&gt;（&lt;/span&gt;&lt;span class="n"&gt;conn&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;_param&lt;/span&gt;&lt;span class="err"&gt;）&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="n"&gt;render&lt;/span&gt; &lt;span class="n"&gt;conn&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;world.html&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="k"&gt;end&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="k"&gt;end&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;div class="line-block"&gt;
&lt;div class="line"&gt;ファイル名はController名をスネークケース,モジュール名は, （ &lt;tt class="docutils literal"&gt;scope&lt;/tt&gt; で設定した名前） &lt;tt class="docutils literal"&gt;.&lt;/tt&gt; （ &lt;tt class="docutils literal"&gt;get&lt;/tt&gt; に設定したController名）で作ります.&lt;/div&gt;
&lt;div class="line"&gt;（ココらへんの理解が微妙に曖昧）&lt;/div&gt;
&lt;div class="line"&gt;で,また &lt;tt class="docutils literal"&gt;/hello&lt;/tt&gt; にアクセスすると,今度はviewがないと怒られます。&lt;/div&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="view"&gt;
&lt;h3&gt;View実装&lt;/h3&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;tt class="docutils literal"&gt;web/views/hello_view.ex&lt;/tt&gt; を以下の内容で作ります.&lt;/div&gt;
&lt;/div&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;1&lt;/span&gt;
&lt;span class="code-line"&gt;2&lt;/span&gt;
&lt;span class="code-line"&gt;3&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kd"&gt;defmodule&lt;/span&gt; &lt;span class="nc"&gt;Hello.HelloView&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="nc"&gt;Hello.Web&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:view&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="k"&gt;end&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;div class="line-block"&gt;
&lt;div class="line"&gt;で,今度はtemplateが無いって怒られるのでまた作ります.&lt;/div&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="template"&gt;
&lt;h3&gt;Template実装&lt;/h3&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;tt class="docutils literal"&gt;web/templates/world.html.eex&lt;/tt&gt; を以下の内容で作ります.&lt;/div&gt;
&lt;/div&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;From template: Hello world!&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;p&gt;これで晴れて &lt;tt class="docutils literal"&gt;/hello&lt;/tt&gt; にアクセスしても怒られなくなります.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="routing"&gt;
&lt;h2&gt;Routing時のパラメータ&lt;/h2&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;次に,ルーティング時にパラメータを渡す方法を実装します.&lt;/div&gt;
&lt;div class="line"&gt;（ &lt;tt class="docutils literal"&gt;/hoge/1/&lt;/tt&gt; のような感じに）&lt;/div&gt;
&lt;div class="line"&gt;&lt;tt class="docutils literal"&gt;web/router.ex&lt;/tt&gt; に上の方で追加したルーティング設定を修正します.&lt;/div&gt;
&lt;/div&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;/hello/:name&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nc"&gt;HelloController&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:world&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;div class="line-block"&gt;
&lt;div class="line"&gt;こうすると &lt;tt class="docutils literal"&gt;:name&lt;/tt&gt; の部分が色々変えられてControllerに渡されてきます.&lt;/div&gt;
&lt;div class="line"&gt;なので,Controllerを以下のように変更して渡された値を取得できるようにします.&lt;/div&gt;
&lt;/div&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;1&lt;/span&gt;
&lt;span class="code-line"&gt;2&lt;/span&gt;
&lt;span class="code-line"&gt;3&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kd"&gt;def&lt;/span&gt; &lt;span class="n"&gt;world&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;conn&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;%{&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;name&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="n"&gt;render&lt;/span&gt; &lt;span class="n"&gt;conn&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;world.html&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="k"&gt;end&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;div class="line-block"&gt;
&lt;div class="line"&gt;パターンマッチにより渡されてきた値が &lt;tt class="docutils literal"&gt;name&lt;/tt&gt; にバインドされます.&lt;/div&gt;
&lt;div class="line"&gt;パターンマッチについては本の中で解説されてますが,飛ばします.プログラミングElixirとかElixirのチュートリアルとか読んでもらえれば.&lt;/div&gt;
&lt;div class="line"&gt;最後に,template側で渡された値を表示するようにしてあげれば完成.&lt;/div&gt;
&lt;/div&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Hello &lt;span class="err"&gt;&amp;lt;&lt;/span&gt;%= String.capitalize @name %&amp;gt;!&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;tt class="docutils literal"&gt;&amp;lt;%= ～ %&amp;gt;&lt;/tt&gt; の部分にElixirの関数が書けて, &lt;tt class="docutils literal"&gt;&amp;#64;name&lt;/tt&gt; の部分にControllerから渡された値が入ってくるようです.&lt;/div&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id5"&gt;
&lt;h2&gt;まとめ&lt;/h2&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;とりあえず今回はここまでとしておきます。&lt;/div&gt;
&lt;div class="line"&gt;かなり復習感ありましたが,基本的な部分はなんとなくわかったと思います。&lt;/div&gt;
&lt;div class="line"&gt;やっぱりRailsにかなり近くて,Railsやってた人はここらへんはあまり深く読まなくても良い気がします.&lt;/div&gt;
&lt;div class="line"&gt;あと名前付けとかのルールとかは追々という感じで調べていきたいです.&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</summary><category term="Elixir"></category><category term="Phoenix"></category></entry></feed>